(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{411:function(e,t,r){"use strict";r.r(t);var _=r(0),i=Object(_.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),r("p",[e._v("安装直接用docker。")]),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),e._m(7),e._v(" "),e._m(8),e._v(" "),e._m(9),e._v(" "),e._m(10),e._v(" "),e._m(11),e._v(" "),e._m(12),e._v(" "),r("p",[e._v("访问http://127.0.0.1:9200/_cat 查看可用的api比如查看索引，查看某个索引数目，健康情况等等。")]),e._v(" "),e._m(13),e._v(" "),e._m(14),e._v(" "),e._m(15),e._v(" "),e._m(16),e._v(" "),e._m(17),e._v(" "),e._m(18),e._v(" "),e._m(19),e._v(" "),r("p",[e._v("}")]),e._v(" "),e._m(20),e._v(" "),e._m(21),e._v(" "),e._m(22),e._v(" "),e._m(23),e._v(" "),e._m(24),e._v(" "),e._m(25),e._v(" "),e._m(26),e._v(" "),e._m(27),e._v(" "),r("p",[e._v("一般是通过倒排索引查找到哪些文档，然后通过正排索引取出文档的完整内容倒排索引是搜索引擎的核心，主要包含两部分")]),e._v(" "),e._m(28),e._v(" "),e._m(29),e._v(" "),e._m(30),e._v(" "),r("p",[e._v("分词把一系列句子分成一系列的词语，例如word to Vec.分词器是es中专门处理分词的组件，Analyzer，它的组成如下：")]),e._v(" "),e._m(31),e._v(" "),e._m(32),e._v(" "),e._m(33),e._v(" "),e._m(34),e._v(" "),e._m(35),e._v(" "),e._m(36),e._v(" "),e._m(37),e._v(" "),e._m(38),e._v(" "),r("p",[e._v("例子（其他的留坑以后试试）:")]),e._v(" "),e._m(39),e._v(" "),e._m(40),e._v(" "),r("p",[e._v("例子（其他的留坑以后试试）:")]),e._v(" "),e._m(41),e._v(" "),e._m(42),e._v(" "),e._m(43),e._v(" "),e._m(44),e._v(" "),r("blockquote",[r("p",[e._v("PUT test_index(自己指定索引)"),r("br"),e._v("\n{"),r("br"),e._v('\n"settings":{'),r("br"),e._v('\n"analysis":'),r("br"),e._v("\n     {"),r("br"),e._v('\n     "char_filter":{},'),r("br"),e._v('\n     "tokenizer":{},'),r("br"),e._v('\n     "filter":{},'),r("br"),e._v('\n     "analyzer":{}'),r("br"),e._v("\n     }"),r("br"),e._v("\n  }"),r("br"),e._v("\n}"),r("br"),e._v(" "),r("Valine")],1)])])},[function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"warning custom-block"},[t("p",{staticClass:"custom-block-title"},[this._v("大数据分析处理流行技术栈")]),this._v(" "),t("p",[this._v("E(elasticsearch)L(logstash)K(Kibana)技术栈")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{attrs:{align:"center"}},[t("h1",[this._v("Easticsearch")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"docker安装es"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker安装es","aria-hidden":"true"}},[this._v("#")]),this._v(" docker安装ES")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ol",[r("li",[r("p",[r("code",[e._v("docker pull registry.docker-cn.com/library/elasticsearch")]),e._v("拉取国内镜像站的经镜像")])]),e._v(" "),r("li",[r("p",[r("code",[e._v("docker run -d -p 9200:9200 -p 9300:9300 registry.docker-cn.com/library/elasticsearch")])]),e._v(" "),r("ul",[r("li",[r("p",[e._v("出错了如下jdk分配内存太大2G更改一下为512m")]),e._v(" "),r("pre",[r("code",[e._v("OpenJDK 64-Bit Server VM warning: INFO: os::commit_memory(0x0000000085330000， 2060255232， 0) failed; error='Cannot allocate memory' (errno=12)\n#\n# There is insufficient memory for the Java Runtime Environment to continue.\n# Native memory allocation (mmap) failed to map 2060255232 bytes for committing reserved memory.\n# An error report file with more information is saved as:\n# /tmp/hs_err_pid1.log\n")])])])])]),e._v(" "),r("li",[r("p",[r("code",[e._v('docker run -d -p 9200:9200 -p 9300:9300 -e ES_JAVA_OPTS="-Xms256m -Xmx256m" registry.docker-cn.com/library/elasticsearch')])])]),e._v(" "),r("li",[r("p",[e._v('"You Know， for Search"')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"数据存储结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据存储结构","aria-hidden":"true"}},[this._v("#")]),this._v(" 数据存储结构")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("ES的存储是Index(数据库)和Document(表)，文档和索引。组织结构是Node(节点)和Cluster(集群)"),t("br"),this._v("\n对外提供RESTapi，json传输"),t("br")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ol",[t("li",[this._v("Json Object，由字段（Field）组成，常见数据类型如下：")])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[e._v("字符串：text，keyword")]),e._v(" "),r("li",[e._v("数值型：long，integer，short byte，double，float，half_float scaled_float")]),e._v(" "),r("li",[e._v("布尔：boolean")]),e._v(" "),r("li",[e._v("日期：date")]),e._v(" "),r("li",[e._v("二进制：binary")]),e._v(" "),r("li",[e._v("范围类型：integer range，float range，long_range，double_range，date_range\n每个document都有一个固定_id，如果你自己不指定系统自动指定哈希")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ol",{attrs:{start:"2"}},[t("li",[this._v("元数据（DocumentMetaData），用于标注文档的相关信息每个document中都有元数据")])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[e._v("_index:文档所在的索引名")]),e._v(" "),r("li",[e._v("type：文档所在的类型名")]),e._v(" "),r("li",[e._v("id：文档唯一id")]),e._v(" "),r("li",[e._v("_uid：组合id，由_type和_id组成（6.x_type不再起作用，同_id一样）")]),e._v(" "),r("li",[e._v("_source：文档的原始Json数据，可以从这里获取每个字段的内容")]),e._v(" "),r("li",[e._v("all：整合所有字段内容到该字段，默认禁用")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ol",{attrs:{start:"3"}},[t("li",[this._v("索引中存储具有相同结构的文档（Document）")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("每个索引都有自己的mapping定义，用于定义字段名和类型（元数据）")]),this._v(" "),t("li",[this._v("一个集群可以有多个索引，比如:nginx日志存储的时候可以按照日期每天生成一个索引来存储，nginx-log-2017-01-01，nginx-log-2017-01-03")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"restapi"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#restapi","aria-hidden":"true"}},[this._v("#")]),this._v(" RESTapi")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("PUT方法+索引名可以创建一个index\n    (PUT http://127.0.0.1:9200/ohh)创建了ohh索引")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("blockquote",[t("p",[this._v("response"),t("br"),this._v("\n{"),t("br"),this._v('\n"acknowledged":true，'),t("br"),this._v('\n"shards_acknowledged":true，'),t("br"),this._v('\n"index":"test_index"'),t("br"),this._v("\n}"),t("br")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("创建文档PUT index/type/id+请求内容"),t("br"),this._v('\n    (PUT http://127.0.0.1:9200/ohh/doc/1 requestbody:{username":"alfred"，"age":1})\n'),t("br"),this._v("ohh创建一个id为1的document")])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("blockquote",[r("p",[e._v("response"),r("br"),e._v("\n{"),r("br"),e._v('\n"_index":"test_index"，'),r("br"),e._v('\n"_type":"doc"，'),r("br"),e._v('\n"id":"1"，如果不指定id只指定到type，自己生成一个id'),r("br"),e._v('\n"version":1，'),r("br"),e._v('\n"result":"created"，'),r("br"),e._v('\n"_shards":{'),r("br"),e._v('\n"total":2，'),r("br"),e._v('\n"successful":1，'),r("br"),e._v('\n"failed":0'),r("br"),e._v('\n"_seq_no":0，'),r("br"),e._v('\n"_primary_term":1'),r("br"),e._v("\n}"),r("br"),e._v("\n}"),r("br")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"danger custom-block"},[t("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),t("p",[this._v("如果插入之前没有es自动创建index和type"),t("br"),this._v("\n在未来type可能会废除，不提倡使用，现在尽量把type全都弄成doc或者是一样的东西不要使用type来分类")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v('GET /index/type/_search?q=xx 查询关键词的不带关键词是全查询放在body里面{"query":{"term":{"_id":"1"}}}\n    ')])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("blockquote",[r("p",[e._v("response "),r("br"),e._v("\n{"),r("br"),e._v('\n"took"：0，查询耗时，单位ms'),r("br"),e._v('\n"timed_out"：false，是否超时'),r("br"),e._v('\n"_shards"：{'),r("br"),e._v('\n"total"：5，总记录'),r("br"),e._v('\n"successful"：5，查询成功的记录'),r("br"),e._v('\n"skipped"：0，跳过了'),r("br"),e._v('\n"failed"：0失败了'),r("br"),e._v('\n"hits"：{'),r("br"),e._v('\n"total"：1，符合条件的总文档数'),r("br"),e._v('\n"hits"：[     返回的文档详情数据数组，默认前10个文档'),r("br"),e._v('\n"_index"："test index"，索引名'),r("br"),e._v('\n"_type":"doc"，记录的type'),r("br"),e._v('\n"_id"："1" 文档的id'),r("br"),e._v('\n"_score":1，文档的得分'),r("br"),e._v('\n"_source"：{文档详情'),r("br"),e._v('\nusername"："alfred"，'),r("br"),e._v('\n"age"：1'),r("br"),e._v("\n}"),r("br")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("允许批量创建文档POST /_bulk"),t("br")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v('body里面 {"index":{"_index":"test_index"，"_type":"doc"，"_id":"3"}{"username":"alfred"，"age":10}'),t("br"),this._v('\n                {"delete":{"_index":"test_index"，"_type":"doc"，"_id":"1"}'),t("br"),this._v('\n                {"update":{"_id":"2"，"_index":"test_index"，"_type":"doc"}{"doc":{"age":"20"}')])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[e._v("方法\n"),r("ul",[r("li",[e._v("index 创建文档如果存在则覆盖")]),e._v(" "),r("li",[e._v("update 更新一个文档")]),e._v(" "),r("li",[e._v("delete 删除某个文档")]),e._v(" "),r("li",[e._v("create 创建文档如果存在则报错")])])]),e._v(" "),r("li",[e._v("批量查询根据id GET /_mget"),r("br"),e._v('\nbody里面{"docs":['),r("br"),e._v('\n{"index":"test_index"，'),r("br"),e._v('\n"_type":"doc"，'),r("br"),e._v('\n"id":"1"'),r("br"),e._v("\n}，"),r("br"),e._v('\n{"index":"test_index"，'),r("br"),e._v('\n"type":"doc"，'),r("br"),e._v('\n"id":"2"'),r("br"),e._v("\n}]"),r("br"),e._v("\n}"),r("br")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引","aria-hidden":"true"}},[this._v("#")]),this._v(" 索引")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"正排索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#正排索引","aria-hidden":"true"}},[this._v("#")]),this._v(" 正排索引")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("文档Id到文档内容、单词的关联关系id为x的文档中出现了什么词")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"倒排索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#倒排索引","aria-hidden":"true"}},[this._v("#")]),this._v(" 倒排索引")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("单词到文档Id的关联关系对句子进行分词之后每个词在哪个文档id出现过")])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[e._v("单词词典（Term Dictionary）\n"),r("ul",[r("li",[e._v("记录所有文档的单词，一般都比较大")]),e._v(" "),r("li",[e._v("记录单词到倒排列表的关联信息")])])]),e._v(" "),r("li",[e._v("倒排列表（Posting List）记录了单词对应的文档集合，由倒排索引项（Posting）组成"),r("br"),e._v("\n倒排索引项（Posting）主要包含如下信息：")]),e._v(" "),r("li",[e._v("文档Id，用于获取原始信息")]),e._v(" "),r("li",[e._v("单词频率（TF，Term Frequency），记录该单词在该文档中的出现次数，用于后续相关性算分")]),e._v(" "),r("li",[e._v("位置（Position），记录单词在文档中的分词位置（多个），用于做词语搜索（Phrase Query）")]),e._v(" "),r("li",[e._v("偏移（Offset），记录单词在文档的开始和结束位置，用于做高亮显示\n"),r("br")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"分词"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分词","aria-hidden":"true"}},[this._v("#")]),this._v(" 分词")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"分词器和它的构成"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分词器和它的构成","aria-hidden":"true"}},[this._v("#")]),this._v(" 分词器和它的构成")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ol",[t("li",[t("p",[this._v("Character Filters针对原始文本进行处理，比如去除html特殊标记符")])]),this._v(" "),t("li",[t("p",[this._v("Tokenizer将原始文本按照一定规则切分为单词")])]),this._v(" "),t("li",[t("p",[this._v("Token Filters针对tokenizer处理的单词就行再加工，比如转小写、删除或新增等处理\n使用_analyze接口可以指定字段，指定analyzer，自定义分词器进行测试")])]),this._v(" "),t("li",[t("p",[this._v('POST /_analyze {"analyzer":"standard"，"text":"hello samasiis"}指定分词器和想要分词的文本，\n"filter":["lowercase"]自己可以指定比如指定filter就可以返回全小写的结果')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("blockquote",[t("p",[this._v("response"),t("br"),this._v('\n{"tokens":\n[{"token":"analyzer"，'),t("br"),this._v('"start_offset":1，'),t("br"),this._v('"end_offset":9，'),t("br"),this._v('"type":"< ALPHANUM >"，'),t("br"),this._v('"position":0}'),t("br"),this._v("]}")])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ol",{attrs:{start:"2"}},[r("li",[e._v("自带的分词器有:"),r("code",[e._v("[Standard，Simple，Whitespace，Stop，Keyword，Pattern，Language]")]),r("br"),e._v(" "),r("code",[e._v("[1]Standard")]),e._v(" 默认分词，按词切分，全员小写支持多语言"),r("br"),e._v(" "),r("code",[e._v("[2]Simple")]),e._v(" 简单分词多，非字符(下划线，数字，单引号等等都切分并且去掉)小写处理"),r("br"),e._v(" "),r("code",[e._v("[3]Whitespace")]),e._v(" 空格切分，保留大写"),r("br"),e._v(" "),r("code",[e._v("[4]Stop")]),e._v(" the，an，的等停止词进行分词"),r("br"),e._v(" "),r("code",[e._v("[5]Keyword")]),e._v("不分词直接返回"),r("br"),e._v(" "),r("code",[e._v("[6]Pattern")]),e._v(" 通过"),r("em",[e._v("正则表达式")]),e._v("自定义分割符默认是\\W+，即非字词的符号作为分隔符，小写"),r("br"),e._v(" "),r("code",[e._v("[7]Language")]),e._v("提供多语言分词器(用到就百度)"),r("br")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"中文分词"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#中文分词","aria-hidden":"true"}},[this._v("#")]),this._v(" 中文分词")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzU1NDA4NjU2MA==&mid=2247486148&idx=1&sn=817027a204650763c1bea3e837d695ea&source=41#wechat_redirect"}},[this._v("难点")]),t("br"),this._v("常用IK，jieba，THULAC，hanlp")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"自定义分词"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自定义分词","aria-hidden":"true"}},[this._v("#")]),this._v(" 自定义分词")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("通过自定义Character Filters、Tokenizer和Token Filter实现"),t("br")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[e._v("Character Filters在Tokenizer之前对原始文本进行处理，比如增加、删除或替换字符等自带的有：\n"),r("ul",[r("li",[e._v("HTML Strip去除html标签和转换html实体")]),e._v(" "),r("li",[e._v("Mapping 进行字符替换操作")]),e._v(" "),r("li",[e._v("Pattern Replace 进行正则匹配替换")]),e._v(" "),r("li",[e._v("会影响后续tokenizer解析的postion和offset信息")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("blockquote",[t("p",[this._v("POST /_analyze"),t("br"),this._v('\n{"tokenizer":"keyword", '),t("br"),this._v('\nA"char_filter":["html_strip"],'),t("br"),this._v('\n"text":"<\\p>I& apos;m so<//b>happy<//b>!<//p>"}')])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[e._v("Tokenizer将原始文本按照一定规则切分为单词（term or token）自带：\n"),r("ul",[r("li",[e._v("standard 按照单词进行分割-letter 按照非字符类进行分割")]),e._v(" "),r("li",[e._v("whitespace 按照空格进行分割")]),e._v(" "),r("li",[e._v("UAXURL Email 按照 standard分割，但不会分割邮箱和url")]),e._v(" "),r("li",[e._v("NGram 和Edge NGram 连词分割")]),e._v(" "),r("li",[e._v("Path Hierarchy 按照文件路径进行切割")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("blockquote",[t("p",[this._v("POST /_analyze"),t("br"),this._v('\n{"tokenizer":"path_hierarchy",'),t("br"),this._v('\n"text":"/one/two/three"'),t("br"),this._v("}")])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[r("p",[e._v("Token Filters对于tokenizer输出的单词（term）进行增加、删除、修改等操作自带的：")]),e._v(" "),r("ul",[r("li",[e._v("lowercase将所有term转换为小写")]),e._v(" "),r("li",[e._v("stop 删除 stop words")]),e._v(" "),r("li",[e._v("NGram和Edge NGram连词分割")]),e._v(" "),r("li",[e._v("Synonym添加近义词的term")])]),e._v(" "),r("blockquote",[r("p",[e._v("POST _analyze"),r("br"),e._v("\n{"),r("br"),e._v('\n"text":"a Hello,world!",'),r("br"),e._v('\n"tokenizer":"standard",'),r("br"),e._v('\n"filter":['),r("br"),e._v('\n"stop",'),r("br"),e._v('\n"lowercase",'),r("br"),e._v("\n        {"),r("br"),e._v('\n        "type":"ngram",'),r("br"),e._v('\n        "min_gram":4,'),r("br"),e._v('\n        "max_gram":4'),r("br"),e._v("\n        }"),r("br"),e._v("\n      ]"),r("br"),e._v("\n}")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"自定义分词的api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自定义分词的api","aria-hidden":"true"}},[this._v("#")]),this._v(" 自定义分词的api")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("创建或更新文档时（Index Time），会对相应的文档进行分词处理查询时（Search Time），会对查询语句进行分词。\n索引时分词是通过配置Index Mapping中每个字段的analyzer属性实现。不指定分词时，使用默认standard。查询的时候通过 analyzer 指定分词器或者在通过index mapping 设置search_analyzer实现\n一般不需要特别指定查询时分词器，如果查询时制定分词器和文档默认分词器不一样可能无法匹配。明确字段是否需要分词，不需要分词的字段就将 type 设置为keyword，可以节省空间和提高写性能\n可以先用_anaylize检查然后再测试\n"),t("br"),this._v("\napi像这样"),t("br")])}],!1,null,null,null);t.default=i.exports}}]);