(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{240:function(a,e,r){a.exports=r.p+"assets/img/20180306142935273.cb5986bb.png"},432:function(a,e,r){"use strict";r.r(e);var t=[function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"content"},[t("h2",{attrs:{id:"是啥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#是啥","aria-hidden":"true"}},[a._v("#")]),a._v(" 是啥")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://uwsgi-docs.readthedocs.io/en/latest/"}},[a._v("文档")])]),a._v(" "),t("h3",{attrs:{id:"wsgi"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#wsgi","aria-hidden":"true"}},[a._v("#")]),a._v(" WSGI")]),a._v(" "),t("p",[a._v("WSGI的全称是Web Server Gateway Interface（Web服务器网关接口），它不是服务器、python模块、框架、API或者任何软件，只是一种描述web服务器（如nginx，uWSGI等服务器）如何与web应用程序（如用Django、Flask框架写的程序）通信的规范。")]),a._v(" "),t("p",[a._v("server和application的规范在PEP3333中有具体描述，要实现WSGI协议，必须同时实现web server和web application，当前运行在WSGI协议之上的web框架有Bottle, Flask, Django。")]),a._v(" "),t("h3",{attrs:{id:"uwsgi"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#uwsgi","aria-hidden":"true"}},[a._v("#")]),a._v(" uWSGI")]),a._v(" "),t("p",[a._v("uWSGI是一个全功能的HTTP服务器，实现了WSGI协议、uwsgi协议、http协议等。它要做的就是把HTTP协议转化成语言支持的网络协议。比如把HTTP协议转化成WSGI协议，让Python可以直接使用。")]),a._v(" "),t("h3",{attrs:{id:"uwsgi-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#uwsgi-2","aria-hidden":"true"}},[a._v("#")]),a._v(" uwsgi")]),a._v(" "),t("p",[a._v("与WSGI一样，是uWSGI服务器的独占通信协议，用于定义传输信息的类型(type of information)。每一个uwsgi packet前4byte为传输信息类型的描述，与WSGI协议是两种东西，据说该协议是fcgi协议的10倍快。")]),a._v(" "),t("h3",{attrs:{id:"nginx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx","aria-hidden":"true"}},[a._v("#")]),a._v(" Nginx")]),a._v(" "),t("p",[a._v("Nginx是一个Web服务器其中的HTTP服务器功能和uWSGI功能很类似，但是Nginx还可以用作更多用途，比如最常用的反向代理功能。")]),a._v(" "),t("h3",{attrs:{id:"django"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#django","aria-hidden":"true"}},[a._v("#")]),a._v(" Django")]),a._v(" "),t("p",[a._v("Django是一个Web框架，框架的作用在于处理request和 reponse，其他的不是框架所关心的内容。所以如何部署Django不是Django所需要关心的。")]),a._v(" "),t("p",[a._v("Django所提供的是一个开发服务器，这个开发服务器，没有经过安全测试，而且使用的是Python自带的simple HTTPServer 创建的，在安全性和效率上都是不行的。")]),a._v(" "),t("p",[a._v("以下是最新版本Django有关runserver command的代码节选")]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/django/django/blob/master/django/core/management/commands/runserver.py#L100-L107"}},[a._v("django.core.management.commands.runserver.Command:run")])]),a._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/django/django/blob/master/django/core/management/commands/runserver.py#L141-L142"}},[a._v("django.core.management.commands.runserver.Command:inner_run")])])]),a._v(" "),t("p",[a._v("其中inner_run函数中的run方法和run方法中server_cls 参数分别取自")]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/django/django/blob/master/django/core/servers/basehttp.py#L164-L180"}},[a._v("django.core.servers.basehttp:run")])]),a._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/django/django/blob/master/django/core/servers/basehttp.py#L57-L73"}},[a._v("django.core.servers.basehttp:WSGIServer")])])]),a._v(" "),t("p",[a._v("在Django源码中可以很清楚的看出来，runserver起来的HTTPServer 就是Python自带的simple_server。而WSGIServer的父类就是wsgiref.simple_server。既然是simple了很多东西都是不太可以的。"),t("br"),a._v("\n访问过程")]),a._v(" "),t("p",[a._v("用一张图来描述一下上述过程："),t("br")]),t("div",{attrs:{align:"center"}},[t("img",{staticStyle:{height:"200px"},attrs:{src:r(240)}})]),t("p"),a._v(" "),t("p",[a._v("一个成熟的站点提供服务，需要Web服务器（静态数据）和App服务器（动态数据）。Web服务器目前属Nginx最强大，用户请求代理过来后，把数据返回给请求客户端。但是目前的互联网发展时代，都是包含动态数据处理的，这样一般Nginx不处理业务逻辑，都外包给后端的App服务器，就是你的django服务器。")]),a._v(" "),t("p",[a._v("在需要性能优化的场景，通常单单nginx和uWSGI也是不够的。nginx主要优化的是连接数和静态文，uWSGI主要优化的是wsgi 服务，这些都只是手段"),t("br"),a._v(" "),t("br")]),t("div",{attrs:{align:"right"}},[t("small",[a._v("------"),t("a",{attrs:{href:"https://blog.csdn.net/yjk13703623757/article/details/79457913"}},[a._v("作者原文")])])]),t("p"),a._v(" "),t("h2",{attrs:{id:"干啥的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#干啥的","aria-hidden":"true"}},[a._v("#")]),a._v(" 干啥的")]),a._v(" "),t("h2",{attrs:{id:"原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原理","aria-hidden":"true"}},[a._v("#")]),a._v(" 原理")]),a._v(" "),t("h2",{attrs:{id:"在哪用了"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在哪用了","aria-hidden":"true"}},[a._v("#")]),a._v(" 在哪用了")]),a._v(" "),t("p",[a._v("Django部署用了。"),t("br"),a._v("\n网上部署文章多的是，大部分是步骤，没几个讲原理的，我今天就带着步骤讲一下原理吧。其实也是一点一点从网上找着积累的。")]),a._v(" "),t("h3",{attrs:{id:"首先，我没时间了"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#首先，我没时间了","aria-hidden":"true"}},[a._v("#")]),a._v(" 首先，我没时间了")])])}],s=r(0),n=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},t,!1,null,null,null);e.default=n.exports}}]);