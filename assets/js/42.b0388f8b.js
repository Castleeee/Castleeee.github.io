(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{460:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h2",[t._v("前置的一些东西")]),t._v(" "),t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),a("p",[t._v("一维，顺序存储的数据元素，可以直接用while进行遍历。只能从头开始，因为没有指向上一个的指针，而且有时候都没有变量名，就维护一个表。表头没有上一个结点，表尾没有下一个节点指向nullptr")]),t._v(" "),a("details",[a("summary",[a("B",[a("I",{staticStyle:{cursor:"pointer",color:"#0e5870"}},[t._v("点击查看线性表代码")])],1)],1),t._v(" "),t._m(10)]),t._v(" "),t._m(11),t._v(" "),a("p",[t._v("链表删除相同的值，单链表往后循环的比，挨个删除")]),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),a("p",[t._v("插入，删除+删除相同元素（注意顺序或者用暂时的指针存储两种断表方式），遍历")]),t._v(" "),t._m(14),t._v(" "),a("h3",[t._v("一元多项式的相加")]),t._v(" "),a("p",[t._v("（浮点系数为0怎么办1.0e-6）\n")]),a("h3",[t._v("头结点的范围值删除")]),a("p"),t._v(" "),a("h3",[t._v("原空间就地逆序")]),t._v("\n啊\n")])},[function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("书上都有的我就不写了比如什么数据元素数据项等等，只及以下经常提到的或者自己对概念的理解。想看概念去 "),s("em",[this._v("[1]数据结构严蔚敏C语言版p4序章1.2")]),this._v("，我也是看着这个书写的"),s("br"),this._v("\n算法的特性：")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("有穷(能执行完)，")]),t._v(" "),a("li",[t._v("确定(每条指令有明确含义无二义性，相同输入会有相同输出)，")]),t._v(" "),a("li",[t._v("可行性(可以由有限个指令实现)，")]),t._v(" "),a("li",[t._v("有一个或多个输入/输出"),a("br"),t._v("\n良好算法要求：")]),t._v(" "),a("li",[t._v("正确(边缘的数据也能得到预期输出)")]),t._v(" "),a("li",[t._v("可读性，")]),t._v(" "),a("li",[t._v("健壮性(鲁棒性鲁大营老师很棒(。・∀・)ノ对于莫名其妙的输入也能处理不会崩)")]),t._v(" "),a("li",[t._v("时间空间复杂度良好。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"时间复杂度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#时间复杂度","aria-hidden":"true"}},[this._v("#")]),this._v(" 时间复杂度")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"空间复杂度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#空间复杂度","aria-hidden":"true"}},[this._v("#")]),this._v(" 空间复杂度")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"线性表-linertable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线性表-linertable","aria-hidden":"true"}},[this._v("#")]),this._v(" 线性表(LinerTable)")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("一般的线性表系统已经实现好了，自己再实现一次差不多就是对系统的list进行封装而已，注意内存地址连续。"),s("br"),this._v("\n性质:")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("有穷性有限个元素，元素长度就是表长")]),this._v(" "),s("li",[this._v("有前驱和后继节点，只有一个直接前驱和直接后继，头无前驱尾无后继")]),this._v(" "),s("li",[this._v("同一性，数据元素类型必需相同")]),this._v(" "),s("li",[this._v("有序性，存在序偶关系")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("顺序表也就是数组，直接存放在连续的内存中，物理内存对应和顺序是一致的。从0开始数不能切片"),a("br"),t._v("\n基本操作：初始化插入查找删除修改求长度"),a("br"),t._v("\n线性表查找插入等的时间耗费主要在表中结点的移动操作上，设在线性表L中的第i元素之前插入结点的概率为Pi，设各个位置插入是等概率，则"),a("code",[t._v("Pi=1/(n+1)")]),t._v("？.而插入时移动结点的次数为"),a("code",[t._v("n-i+1")]),t._v(".\n总的平均移动次数："),a("code",[t._v("Einsert=ΣPi*(n-i+1)")]),t._v("    (1<i<n) "),a("code",[t._v("Einsert=n/2")]),t._v(" 即在顺序表上做插入运算，平均要移动表上一半结点。当表长n较大时，算法的效率相当低。因此算法的平均时间复杂度为 "),a("code",[t._v("O(n)")]),t._v(".")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("动态分配")]),t._v(" "),a("p",[t._v("动态分配"),a("code",[t._v("p=(LNode*)malloc(sizeof(LNode));")]),a("br"),t._v("\n函数"),a("code",[t._v("malloc")]),t._v("分配了一个类型为LNode的结点变量的空间，并其首地址放入指针变量p中。"),a("br"),t._v("\n动态释放"),a("code",[t._v("free(p);")]),t._v("系统回收由指针变量p所指向的内存区。p必须是最近一次调用malloc函数时的返回值。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"链表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#链表","aria-hidden":"true"}},[this._v("#")]),this._v(" 链表")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*include here*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"iostream"')])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string"')])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*define here*/")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*function&class*/")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//表示这是创建的第几个node")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Liner")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    string value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Liner "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    string "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//get 方法")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//set方法")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    Liner "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetNext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("next"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nullptr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//取值")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            cout"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"no next node"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Liner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"no first data set!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Liner "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("next"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nullptr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//entry")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Liner "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("B")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"you succeed"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Liner "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("A")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"12345"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cout"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetNext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\ncreated by a_little_rubbish\nhave a nice day : )\n*/")]),t._v("\n\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"链表插入，遍历，删除相同元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#链表插入，遍历，删除相同元素","aria-hidden":"true"}},[this._v("#")]),this._v(" 链表插入，遍历，删除相同元素")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"链表有序合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#链表有序合并","aria-hidden":"true"}},[this._v("#")]),this._v(" 链表有序合并")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"双向链表-循环链表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#双向链表-循环链表","aria-hidden":"true"}},[this._v("#")]),this._v(" 双向链表&循环链表")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"一些应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一些应用","aria-hidden":"true"}},[this._v("#")]),this._v(" 一些应用")])}],!1,null,null,null);s.default=e.exports}}]);