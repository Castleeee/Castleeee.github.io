(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{229:function(t,e,s){t.exports=s.p+"assets/img/截图 2019-11-06_17-33-14.50624875.png"},230:function(t,e,s){t.exports=s.p+"assets/img/TQDj8Uo1pj3YkMSoeSitYC1QB4a019V68N6GZFBE.55e42759.png"},231:function(t,e,s){t.exports=s.p+"assets/img/Snipaste_2019-11-08_11-49-07.c5efa124.png"},232:function(t,e,s){t.exports=s.p+"assets/img/Snipaste_2019-11-07_23-36-04.8e02e9f5.png"},233:function(t,e,s){t.exports=s.p+"assets/img/Snipaste_2019-11-08_00-27-17.ce941491.png"},234:function(t,e,s){t.exports=s.p+"assets/img/截图 2019-11-08_13-59-35.a7a9f2a0.png"},235:function(t,e,s){t.exports=s.p+"assets/img/截图 2019-11-08_14-48-57.d397a968.png"},437:function(t,e,s){"use strict";s.r(e);var i=[function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"工具测评"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#工具测评","aria-hidden":"true"}},[this._v("#")]),this._v(" 工具测评")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[s("strong",[t._v("gitkraken")]),s("br"),t._v("\n基本功能齐全，还能追踪issue，支持本地仓库部署，不支持私仓库，付费可以单号基本功能都有，没必要付费。"),s("br"),t._v(" "),s("strong",[t._v("tortoiseGit")]),s("br"),t._v("\n超级好用，右键直接启用，占用资源小，有中文，有点复古不过还好，实用性抵消了不好看。"),s("br"),t._v(" "),s("strong",[t._v("GitGUI")]),s("br"),t._v("\n自带的没怎么用过。"),s("br"),t._v(" "),s("strong",[t._v("SourceTree")]),s("br"),t._v("\n免费，基本功能齐全，好用，不过不好看。"),s("br"),t._v(" "),s("strong",[t._v("GitDesktop")]),s("br"),t._v("\n不大好用，不是很习惯，而且每次打开还要安装")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"git操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git操作","aria-hidden":"true"}},[this._v("#")]),this._v(" Git操作")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"初始化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#初始化","aria-hidden":"true"}},[this._v("#")]),this._v(" 初始化")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("这是"),s("a",{attrs:{href:"https://rogerdudler.github.io/git-guide/index.zh.html"}},[t._v("简单指南")]),t._v("，可以放在收藏夹想不起来了拿起来看看."),s("br"),t._v("\n装好之后先配置一下账户。"),s("br"),t._v(" "),s("strong",[s("code",[t._v('git config --global user.name "ooowl"')])]),s("br"),t._v(" "),s("strong",[s("code",[t._v('git config --global user.email "2411708618aqq.com"')])]),s("br"),t._v(" "),s("strong",[s("code",[t._v("git config --global core.editor vim")])]),s("br"),t._v("\n作者是谁，仓库commit会有你的名字，名字和email(名字可以重复但email一般唯一)并不作为身份标识，只是一个标记而已所有的独立提交不记名只验证公钥或github账号,你可以通过这样来查看"),s("br"),t._v(" "),s("strong",[s("code",[t._v("git config user.name")])]),s("br"),t._v(" "),s("strong",[s("code",[t._v("git config user.email")])]),s("br"),t._v("\n进入到你想建立的目录下，用git init就会在该目录下生成一个.git文件夹，想知道这个文件夹里面是什么就自己去搜。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"查看"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看","aria-hidden":"true"}},[this._v("#")]),this._v(" 查看")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[s("strong",[s("code",[t._v("git status")])]),t._v(" 看看自己目前仓库里未跟踪的文件，修改未提交的文件"),s("br"),t._v(" "),s("strong",[s("code",[t._v("git log (--oneline --all --graph )")])]),t._v(" 查看所有的提交记录，回滚需要至少7位id，-p查看提交具体干了啥,--all查看所有的分支，--graph 尽可能用图形表示。"),s("br"),t._v(" "),s("strong",[s("code",[t._v("git reflog")])]),t._v(" 查看命令历史，以便确定要回到未来的哪个版本"),s("br"),t._v(" "),s("strong",[s("code",[t._v("git remote -v")])]),t._v(" 查看你的远程仓库的路径"),s("br")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{attrs:{align:"center"}},[e("img",{staticStyle:{height:"250px"},attrs:{src:s(229)}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"基本的操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本的操作","aria-hidden":"true"}},[this._v("#")]),this._v(" 基本的操作")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[s("strong",[s("code",[t._v("git clone Address")])]),t._v(" 克隆项目"),s("br"),t._v(" "),s("strong",[s("code",[t._v("git add (.)")])]),t._v(" 把文件添加到暂存区，未跟踪的文件可以直接添加为跟踪"),s("br"),t._v(" "),s("strong",[s("code",[t._v("git restore")])]),s("br"),t._v(" "),s("strong",[s("code",[t._v("git push -u origin master")])]),t._v(" 推送到 远程的master分支"),s("br"),t._v(" "),s("strong",[s("code",[t._v("git fetch")])]),t._v(" 从分支获取"),s("br"),t._v(" "),s("strong",[s("code",[t._v("git pull")])]),t._v(" 获取分支"),s("br"),t._v(" "),s("strong",[s("code",[t._v('git commit -m "你的提交信息"')])]),s("br"),t._v(" "),s("strong",[s("code",[t._v("git checkout (id or -)(/path/file)")])]),t._v(" 回到(某个or上一个)提交点，可以直接用tag名,跟文件名可以直接修改单独某个文件"),s("br"),t._v(" "),s("strong",[s("code",[t._v('git tag (-a 标签名 -m "标签信息" -d 标签or id删除 ) (id)')])]),t._v(" 默认加在最近的commit上，如果想加其他commit 后面跟上id"),s("br"),t._v(" "),s("strong",[s("code",[t._v("git remote add Name RemoteAddress.git")])]),t._v(" 添加一个远程仓库地址。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("TIP")]),this._v(" "),e("p",[this._v("https是无状态的，使用https提交每次都要输入用户名和密码，SSH url克隆需要在克隆之前先配置和添加好SSH key，ssh默认是每次fetch和push代码都不需要输入账号和密码，如果你想要每次都输入账号密码才能进行fetch和push也可以另外进行设置。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[e("code",[this._v("git rm --cached 文件名")])]),this._v(" 停止对git已跟踪的文件跟踪，但保留之前该文件的跟踪状态")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("在一个分支下开发，这种做法是没有问题的。即在 master 分支里，使用如上操作之后，config.js 就从 git 管理中剔除了，但是仍然存在于硬盘上。并不会影响到本地开发环境的正常调试。"),e("br"),this._v("\n如果同时满足以下条件的情况下就会出问题"),e("br"),this._v("\n    1 多分支同时存在 config.php 文件。例如，master 分支，dev 分支都有 config.php 文件"),e("br"),this._v("\n    2 一个分支删除了该文件，然后在另一个分支，merge 了该提交"),e("br"),this._v("\n这时候dev和master分支的config.js就全消失了。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[e("code",[this._v("git update-index --assume-unchanged 文件名")])]),this._v(" 暂时让git忽略已跟踪的文件,具体看"),e("a",{attrs:{href:"https://segmentfault.com/q/1010000000430426"}},[this._v("这一篇")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("虽然能达到（暂时的）目的，但并非最正确的做法，这样做是误解了 git update-index 的含义，而且这样做带来的最直接（不良）后果是这样的："),e("br"),this._v(" "),e("br"),this._v("\n    1 所有的团队成员都必须对目标文件执行：git update-index --assume-unchanged PATH。这是因为即使你让 Git 假装看不见目标文件的改变，但文件本身还是在 Git 的历史记录里的，所以团队的每个人在 fetch 的时候都会拉到目标文件的变更。（但实际上目标文件是根本不想被 Git 记录的，而不是假装看不见它发生了改变）"),e("br"),this._v(" "),e("br"),this._v("\n    2 一旦有人改变目标文件之后没有 git update-index --assume-unchanged PATH 就直接 push 了，那么接下来所有拉取了最新代码的成员必须重新执行 update-index，否则 Git 又会开始记录目标文件的变化。这一点实际上很常见的，比如说某成员换了机器或者硬盘，重新 clone 了一份代码库，由于目标文件还在 Git 的历史记录里，所以他／她很可能会忘记 update-index。")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("blockquote",[s("p",[s("strong",[t._v("git update-index --assume-unchanged")]),t._v(" 的真正用法是这样的："),s("br"),t._v("\n    1 你正在修改一个巨大的文件，你先对其 "),s("code",[t._v("git update-index --assume-unchanged")]),t._v("，这样 Git 暂时不会理睬你对文件做的修改；"),s("br"),t._v("\n    2 当你的工作告一段落决定可以提交的时候，重置改标识："),s("br"),t._v(" "),s("code",[t._v("git update-index --no-assume-unchanged")]),t._v("，于是 Git 只需要做一次更新，这是完全可以接受的了；"),s("br"),t._v("\n    3 提交＋推送。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"分支和合并"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分支和合并","aria-hidden":"true"}},[this._v("#")]),this._v(" 分支和合并")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[e("code",[this._v("git branch xxx")])]),this._v("  产生一个新分支，想回到某个点获取分支可以先checkout")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("产生新分支 git checkout -b xxx")]),t._v(" "),s("li",[t._v("删除分支 git branch -d xxx\n"),s("strong",[s("code",[t._v("git merge xxx")])]),t._v(" 将xxx合并到master，出现confilct的时候，大于号小于号和等号之间分别是两个分支不同的内容，最后需要在commit一次"),s("br"),t._v(" "),s("strong",[s("code",[t._v("it rebase")])]),t._v(" 和mrege的作用是一样的，不过结果不同。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"warning custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),e("p",[this._v("merge会在head后面紧接着提交，合并后自动提交一次作为标记，worktree会有一个分支记录。"),e("br"),this._v("\nrebase会在分支根提交点处接着提交，之后再跟上master该节点之后的的提交，worktree不会有分支记录。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[e("code",[this._v("git show (id or tag)")])]),this._v(" 查看这次id和tag的详细信息，包括提交时间作者提交了啥等等")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("图解（源水印）"),e("br")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{attrs:{align:"center"}},[e("img",{staticStyle:{height:"450px"},attrs:{src:s(230)}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"ignore语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ignore语法","aria-hidden":"true"}},[this._v("#")]),this._v(" ignore语法")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("史上最全的"),s("a",{attrs:{href:"https://github.com/github/gitignore"}},[t._v("gitignore语法")]),t._v("模板"),s("br"),t._v("\n1："),s("code",[t._v("#")]),t._v(" 此为注释"),s("br"),t._v("\n2："),s("code",[t._v("*.a")]),t._v(" 忽略所有.a结尾的文件"),s("br"),t._v("\n3："),s("code",[t._v("!lib.a")]),t._v(" 但lib.a除外"),s("br"),t._v("\n4："),s("code",[t._v("/todo")]),t._v(" 仅仅忽略项目根目录下的todo文件，不包括subdir/todo"),s("br"),t._v("\n5："),s("code",[t._v("build/*")]),t._v(" 忽略build/目录下的所有文件"),s("br"),t._v("\n6："),s("code",[t._v("doc/*.txt")]),t._v("忽略doc/notes.txt(只忽略doc下本身的文件)，但不包括doc/server/arch.txt(子目录下的文件)"),s("br"),t._v("\n7：原来已经被跟踪的文件是无效的，必须先取消跟踪git rm --cache，下次提交就不会生效了"),s("br"),t._v("\n8："),s("code",[t._v(".idea/**/*")]),t._v(" 忽略某个(idea)文件夹下所有的文件和子文件夹(递归忽略所有)")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"服务器部署"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#服务器部署","aria-hidden":"true"}},[this._v("#")]),this._v(" 服务器部署")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("带宽足够人少的时候建立一个文件共享，然后挂载目录，一块开发(人多不好用，坏了风险高)")]),this._v(" "),e("li",[this._v("建立Git服务器，首先你需要一个能ssh的服务器主机，安装git")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"申请用户"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#申请用户","aria-hidden":"true"}},[this._v("#")]),this._v(" 申请用户")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("groupadd git //申请组,把用到的用户都啊计入到这个组里\nuseradd git -g git\npasswd git\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("每个用户单独的ssh K,这样就可以一个用户对应一个工程互不影响,多个工程只要申请多个用户,放到git用户组更管理就可以了."),e("br"),this._v("\n设置用户只能使用git禁止登陆ssh,编辑"),e("code",[this._v("/etc/passwd")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git:x:502:504::/home/git:/bin/bash //找到这一行\ngit:x:502:504::/home/git:/bin/git-shell//改为这个\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{attrs:{align:"center"}},[e("img",{staticStyle:{height:"350px"},attrs:{src:s(231)}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"添加公钥"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#添加公钥","aria-hidden":"true"}},[this._v("#")]),this._v(" 添加公钥")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("你也可以不添加直接ssh克隆,但是这样会每次都让你输入密码,只把开发记得公钥添加就行了"),e("br"),this._v("\n首先在你的客户机上cmd运行")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('ssh-keygen -t rsa -C "xxxxx@mail.com" \n//最后的又像是公钥里面显示的名字,自己开心就行\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("这样在下就得到了一对公钥和私钥"),e("br")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{attrs:{align:"center"}},[e("img",{staticStyle:{height:"150px"},attrs:{src:s(232)}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("编辑"),e("code",[this._v("id_rsa.pub")]),this._v("里面就是你的公钥复制下来")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("在服务器上进入"),e("code",[this._v("/etc/ssh")]),this._v(" 目录，编辑 "),e("code",[this._v("sshd_config")]),this._v("，打开以下三个配置的注释：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("RSAAuthentication yes\nPubkeyAuthentication yes\nAuthorizedKeysFile .ssh/authorized_keys\n/etc/rc.d/init.d/sshd restart //重启ssh\nmkdir -p /home/git/.ssh\ntouch /home/git/.ssh/authorized_keys //新建了信任公钥\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("然后将客户机们的公钥"),e("code",[this._v("id_rsa.pub")]),this._v("里面的内容复制到git用户的"),e("code",[this._v("authorized_keys")]),this._v("里面")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"修改权限并创建仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改权限并创建仓库","aria-hidden":"true"}},[this._v("#")]),this._v(" 修改权限并创建仓库")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("sudo git init --bare /home/git/project1/test.git\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("一定要修改权限!!!")]),e("br"),this._v("\n免密登录也是这个权限,本身就是免密登录ssh传送的文件.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"warning custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),e("p",[this._v("修改 .ssh 目录的权限为 700"),e("br"),this._v("\n修改 .ssh/authorized_keys 文件的权限为 600"),e("br"),this._v("\n仓库,.ssh目录和authorized_keys都要修改所有者")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("chmod 700  /home/git/.ssh\nchmod 600  /home/git/.ssh/authorized_keys \nchown -R git:git /home/git/.ssh \nchown -R git:git /home/git/.ssh/authorized_keys \nchown -R git:git /home/git/project1/test.git  //chown -R 所有者:组\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"推送到远端"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#推送到远端","aria-hidden":"true"}},[this._v("#")]),this._v(" 推送到远端")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git@192.168.0.100:/home/git/project1/test.git //SCP写法\nssh://git@192.168.0.100/home/git/project1/test.git //SSH写法\n//Https的写法没有配置,而且每次都要输密码,团队协作不好用\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{attrs:{align:"center"}},[e("img",{staticStyle:{height:"350px"},attrs:{src:s(233)}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"工作流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#工作流","aria-hidden":"true"}},[this._v("#")]),this._v(" 工作流")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"gitflow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gitflow","aria-hidden":"true"}},[this._v("#")]),this._v(" gitflow")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("gitflow"),e("a",{attrs:{href:"https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow"}},[this._v("工作流")]),this._v("，团队开发的范例。"),e("br")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{attrs:{align:"center"}},[e("img",{staticStyle:{height:"350px"},attrs:{src:s(234)}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("中小型团队协作时候很重要"),e("br"),this._v(" "),e("strong",[this._v("大致注意下面这么几点")]),e("br"),this._v("\n鸽了鸽了")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"github工作流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#github工作流","aria-hidden":"true"}},[this._v("#")]),this._v(" github工作流")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{attrs:{align:"center"}},[e("img",{staticStyle:{height:"280px"},attrs:{src:s(235)}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("新建分支（Create a branch）")]),t._v(" "),s("li",[t._v("提交修改（Add commits）")]),t._v(" "),s("li",[t._v("创建PR（Open a Pull Request）")]),t._v(" "),s("li",[t._v("代码评审（Discuss and review your code）")]),t._v(" "),s("li",[t._v("部署（Deploy）")]),t._v(" "),s("li",[t._v("合并（Merge）")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("TIP")]),this._v(" "),e("p",[this._v("保持自己的fork最新 鸽了🕊")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("部署（Deploy）发生在合并（Merge）之前，这就是 GitHub flow 的核心，非阻塞式集成----在产生任何副作用之前得知当前修改的所有集成效果，达到真正的持续集成"),e("br"),this._v("\n体验一下Github开源软件如何PR和fork的工作模式"),e("a",{attrs:{href:"https://help.github.com/en/github/getting-started-with-github/fork-a-repo"}},[this._v("链接1")]),this._v(" "),e("a",{attrs:{href:"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests"}},[this._v("链接2")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"gitolite"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gitolite","aria-hidden":"true"}},[this._v("#")]),this._v(" gitolite")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("这个是用来管理的，可以精确控制分支读写权限，各种粒度都可以"),e("br"),this._v("\n不进行身份验证，仅是授权(官方原话)。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"参考资料"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考资料","aria-hidden":"true"}},[this._v("#")]),this._v(" 参考资料")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("a",{attrs:{href:"https://www.cnblogs.com/dee0912/p/5815267.html#_label8"}},[t._v("1 参 考")])]),t._v(" "),s("li",[s("a",{attrs:{href:"https://segmentfault.com/q/1010000000430426"}},[t._v("2 参 考")])]),t._v(" "),s("li",[s("a",{attrs:{href:"https://biaoyansu.com"}},[t._v("3 表严肃的课程")])]),t._v(" "),s("li",[s("a",{attrs:{href:"https://git-scm.com/book/zh/v1/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84-Git-Gitolite"}},[t._v("4 参 考")])]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.jianshu.com/p/5aa4123b2322"}},[t._v("5 参 考")])])])}],r=s(0),a=Object(r.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._m(7),s("p"),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._m(22),s("p"),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),s("p",[t._v("常见的几种方案")]),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),s("p",[t._v("申请用户并设置密码")]),t._v(" "),t._m(28),t._m(29),t._v(" "),t._m(30),t._m(31),t._v(" "),t._m(32),t._v(" "),t._m(33),t._v(" "),t._m(34),t._m(35),t._m(36),s("p"),t._v(" "),t._m(37),t._v(" "),t._m(38),t._v(" "),t._m(39),t._m(40),t._v(" "),t._m(41),t._v(" "),s("p",[t._v("在home下建立对应的工程最好,每个用管理自己的工程")]),t._v(" "),t._m(42),t._m(43),t._v(" "),t._m(44),t._v(" "),t._m(45),t._m(46),t._v(" "),s("p",[t._v("这时候应该可以clone了,url有两种写法(推荐ssh)")]),t._v(" "),t._m(47),t._m(48),t._v(" "),t._m(49),t._v(" "),t._m(50),t._v(" "),t._m(51),t._m(52),s("p"),t._v(" "),t._m(53),t._v(" "),s("p",[t._v("bitbucket提供免费私人5人无限制的私有仓库，gitlab和bitbucket提供精确到分支的权限控制,但bitbucket仍然是云托管，Gitlab占资源太大需要一个好服务器才行。")]),t._v(" "),t._m(54),t._v(" "),t._m(55),t._v(" "),s("p",[t._v("主要流程为:")]),t._v(" "),t._m(56),t._v(" "),t._m(57),t._v(" "),t._m(58),t._v(" "),t._m(59),t._v(" "),t._m(60),t._v(" "),s("p",[t._v("先鸽了")]),t._v(" "),t._m(61),t._v(" "),t._m(62),t._v(" "),s("Valine")],1)},i,!1,null,null,null);e.default=a.exports}}]);