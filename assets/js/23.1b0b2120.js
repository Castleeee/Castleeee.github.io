(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{199:function(t,s,a){t.exports=a.p+"assets/img/arr.20f81446.png"},455:function(t,s,a){"use strict";a.r(s);var e=[function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("TIP")]),this._v(" "),s("p",[this._v("考研需要c++，回忆一下语言基础。"),s("br"),this._v("\n因为不是专精底层，记录错误和踩到的坑")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{attrs:{align:"center"}},[s("h1",[s("strong",[this._v("C语言")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"变量和类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量和类型","aria-hidden":"true"}},[this._v("#")]),this._v(" 变量和类型")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("1B=8bit"),s("br"),this._v("\n1kB=1024B"),s("br"),this._v("\n1mB=1024kB"),s("br"),this._v("\n1GB=1024MB"),s("br"),this._v("\n1TB=1024GB"),s("br"),this._v("\n1PB=1024TB"),s("br")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("先定义后使用")]),this._v(" "),s("li",[this._v("字母数字下划线,不能数字开头")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"整数类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#整数类型","aria-hidden":"true"}},[this._v("#")]),this._v(" 整数类型")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"right"}},[t._v("类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("存储大小")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("值范围")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("char")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1 字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-128 到 127 或 0 到 255")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("unsigned char")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1 字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0 到 255")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("signed char")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1 字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-128 到 127")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("int")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("2 或 4 字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-32,768 到 32,767 或 -2,147,483,648 到 2,147,483,647")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("unsigned int")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("2 或 4 字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0 到 65,535 或 0 到 4,294,967,295")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("short")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("2 字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-32,768 到 32,767")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("unsigned short")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("2 字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0 到 65,535")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("long")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("4 字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-2,147,483,648 到 2,147,483,647")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("unsigned long")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("4 字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0 到 4,294,967,295")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"浮点数类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浮点数类型","aria-hidden":"true"}},[this._v("#")]),this._v(" 浮点数类型")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"right"}},[t._v("类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("存储大小")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("值范围")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("精度")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("float")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("4 字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1.2E-38 到 3.4E+38")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("6 位小数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("double")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("8 字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("2.3E-308 到 1.7E+308\t15")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("位小数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("long double")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("16 字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("3.4E-4932 到 1.1E+4932")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("19 位小数")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"类型定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型定义","aria-hidden":"true"}},[this._v("#")]),this._v(" 类型定义")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("变量是有地址中的一个"),s("code",[this._v("值")]),this._v("和"),s("code",[this._v("名字")]),this._v("构成的."),s("br"),this._v("\n在定义中不允许连续赋值，如int a=b=c=5;是不合法的。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型转换","aria-hidden":"true"}},[this._v("#")]),this._v(" 类型转换")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("(doubel)a")]),this._v(";"),s("br"),this._v("\n字符型变量的值实质上是一个8位的整数值，因此取值范围一般是-128～127，char型变量也可以加修饰符unsigned，则unsigned char 型变量的取值范围是0～255(有些机器把char型当做unsighed char型对待， 取值范围总是0～255)。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("浮点数赋给整型，该浮点数小数被舍去；")]),t._v(" "),a("li",[t._v("整数赋给浮点型，数值不变，但是被存储到相应的浮点型变量中；\n强制类型转换的时候:"),a("br"),t._v("\n自动类型转换:"),a("strong",[t._v("char->int->double<-char")]),a("br"),t._v("\n强制类型转换:"),a("strong",[t._v("char,short->unsigned->long->double<-float")]),a("br"),t._v("\n不能逆序,会有信息损失，分数转成整数就会舍掉小数位,char类型数据转换为int类型数据遵循ASCII码中的对应值"),a("br"),t._v("\n看"),a("a",{attrs:{href:"https://blog.csdn.net/ce123_zhouwei/article/details/9104681"}},[t._v("这里")]),a("br"),t._v(" "),a("code",[t._v("int a=5;")]),a("br"),t._v(" "),a("code",[t._v("double_a=(double) a;")]),t._v("#类型转换不会影响原来的值"),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"字符-字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符-字符串","aria-hidden":"true"}},[this._v("#")]),this._v(" 字符&字符串")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("定义字符用"),s("code",[this._v("char")]),this._v("来定义(实质上是ascii的编码的int)，所占空间和范围见上表，占位符使用"),s("code",[this._v("%c")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" q"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d,%c"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"danger custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),s("p",[this._v("用"),s("code",[this._v("''")]),this._v("单引号，切忌，千万不能用双引号，双引号是来表示字符串的。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("c中没有string。c的字符串是以null"),s("code",[this._v("'/0'")]),this._v("结尾的一维字符数组，字符数量会比实际显示的字符数多1，可以简写为"),s("code",[this._v('char yy[] = "Hello";')])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" xx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'y'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'z'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\0'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" yy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%s,%s"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("xx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("yy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"right"}},[t._v("序号")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("函数")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("目的")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("strcpy(s1, s2);")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("复制字符串 s2 到字符串 s1。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("2")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("strcat(s1, s2);")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("连接字符串 s2 到字符串 s1 的末尾。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("3")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("strlen(s1);")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回字符串 s1 的长度。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("4")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("strcmp(s1, s2);")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("如果 s1 和 s2 是相同的，则返回 0；如果 s1<s2 则返回小于 0；如果 s1>s2 则返回大于 0。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("5")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("strchr(s1, ch);")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回一个指针，指向字符串 s1 中字符 ch 的第一次出现的位置。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("6")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("strstr(s1, s2);")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回一个指针，指向字符串 s1 中字符串 s2 的第一次出现的位置。")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"枚举enum"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#枚举enum","aria-hidden":"true"}},[this._v("#")]),this._v(" 枚举enum")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),s("p",[this._v("枚举被定义int或unsigned int，不连续的枚举无法遍历")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[this._v("留坑\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"常量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常量","aria-hidden":"true"}},[this._v("#")]),this._v(" 常量")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"define"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#define","aria-hidden":"true"}},[this._v("#")]),this._v(" define")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("#define X 3")]),this._v("定义了X为3，利用宏定义，不能改变，不做计算，不做表达式求解")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("define宏是在预处理阶段展开。")]),this._v(" "),s("li",[this._v("define宏没有类型，不做任何类型检查，仅仅是展开")]),this._v(" "),s("li",[this._v("define宏仅仅是展开，有多少地方使用，就展开多少次，不会分配内存。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("冷知识")]),this._v(" "),s("p",[this._v("宏定义不分配内存，变量定义分配内存"),s("br"),this._v("\n比如说C语言标准规定编译器至少支持宏的名字有63个字符（多的话意义不能保证），至少支持同时定义4095个宏，函数形的宏最多可能有127个参数")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("a",{attrs:{href:"https://blog.csdn.net/clever101/article/details/8053510"}},[this._v("define的上限")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"const"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#const","aria-hidden":"true"}},[this._v("#")]),this._v(" const")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("const 变量类型 X=3")]),this._v("使用const定义了X为3")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("const常量是编译运行阶段使用。")]),this._v(" "),s("li",[this._v("const常量有具体的类型，在编译阶段会执行类型检查")]),this._v(" "),s("li",[this._v("const常量会在内存中分配(可以是堆中也可以是栈中)\nconst  可以节省空间，避免不必要的内存分配看代码")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" PI 3.14159 ")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//常量宏")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" doulbe Pi"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.14159")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//此时并未将Pi放入ROM中")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Pi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//此时为Pi分配内存，以后不再分配！")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" I"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PI"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//编译期间进行宏替换，分配内存")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Pi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//没有内存分配")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" J"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PI"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//再进行宏替换，又一次分配内存！")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),s("p",[this._v("const定义常量从汇编的角度来看，只是给出了对应的内存地址，而不是象#define一样给出的是立即数，所以，const定义的常量在程序运行过程中只有一份拷贝（因为是全局的只读变量，存在静态区），而 #define定义的常量在内存中有若干个拷贝。\n"),s("br"),this._v("编译器通常不为普通const常量分配存储空间，而是将它们保存在符号表中，这使得它成为一个编译期间的常量，没有了存储与读内存的操作，使得它的效率也很高。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("一些规则"),s("br")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("有些集成化的调试工具可以对const常量进行调试，但是不能对宏常量进行调试。")]),this._v(" "),s("li",[this._v("在C++ 程序中只使用const常量而不使用宏常量，即const常量完全取代宏常量。")]),this._v(" "),s("li",[this._v("需对外公开的常量放在头文件中，不对外公开的常量放在定义文件头部,可以把不同模块的常量集中放在一个公共头文件中")]),this._v(" "),s("li",[this._v("如果某一常量与其它常量密切相关，应在定义中包含这种关系，而不应给出一些孤立的值。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"danger custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),s("p",[this._v("const数据成员只在某个对象生存期内是常量，而对于整个类而言却是可变的，因为类可以创建多个对象，不同的对象其const数据成员的值可以不同,应该用类中的枚举常量来实现")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"输入输出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#输入输出","aria-hidden":"true"}},[this._v("#")]),this._v(" 输入输出")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"io含树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#io含树","aria-hidden":"true"}},[this._v("#")]),this._v(" IO含树")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("scanf和printf"),s("br"),this._v('\nscanf("占位符1,占位符2",变量地址1,变量地址2,...);'),s("br"),this._v("\n控制台输入要和这个一样1,2"),s("br"),this._v("\nprintf(“格式控制字符串”, 输出表列)"),s("br"),this._v("\nprintf和puts两者都属于stdio.h这个头文件，都能输出字符串"),s("br"),this._v("\nputs()在输出字符串时会将'\\0'自动转换成'\\n'进行输出.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"占位符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#占位符","aria-hidden":"true"}},[this._v("#")]),this._v(" 占位符")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"right"}},[t._v("类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("作用")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("％d      ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("整型输出")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("％ld      ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("长整型输出，")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("％o      ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("以八进制数形式输出整数，")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("％x      ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("以十六进制数形式输出整数，或输出字符串的地址。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("％u      ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("以十进制数输出unsigned型数据(无符号数)。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("％c      ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("用来输出一个字符，")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("％s      ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("用来输出一个字符串，")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("％f      ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("用来输出实数，以小数形式输出，默认情况下保留小数点6位。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("%.100f      ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("用来输出实数，保留小数点100位。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("％e      ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("以指数形式输出实数，")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("％g      ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("根据大小自动选f格式或e格式，且不输出无意义的零。")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),s("p",[this._v("%d与%u有无符号的数值范围，也就是极限的值，不然数值打印出来会有误。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"特殊符号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特殊符号","aria-hidden":"true"}},[this._v("#")]),this._v(" 特殊符号")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"right"}},[t._v("符号            ")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("            意义")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("ascii对应")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("            空格            ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("            ' '            ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("\\u0020")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("            换页            ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("            '\\f'            ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("            换行            ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("            '\\n'            ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("\\u0010")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("            回车            ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("            '\\r'            ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("\\u0013")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("            水平制表符            ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("            '\\t'            ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("\\u0009")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("            垂直制表符            ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("            '\\v'            ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符","aria-hidden":"true"}},[this._v("#")]),this._v(" 运算符")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("常见的我就不放了，注意"),s("code",[this._v("%")]),this._v("是取余数")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"right"}},[t._v("等级")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("1      ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("      （ ）      ")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("2      ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("      ！  +（正号）  -（负号）  ++  --      ")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("3      ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("       *  /  %      ")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("4      ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("      +（加）  -（减）      ")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("5      ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("      <  <=  >=  >      ")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("6      ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("      ==  !=      ")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("7      ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("      &&      ")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("8      ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("       **")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("9      ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("       ?:      ")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("10      ")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("      =  +=  -= *= /= %=      ")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),s("p",[this._v("注意：复合运算符中运算符和等号之间是不存在空格的。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"分支循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支循环","aria-hidden":"true"}},[this._v("#")]),this._v(" 分支循环")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"if-语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#if-语句","aria-hidden":"true"}},[this._v("#")]),this._v(" if 语句")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n             "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"danger custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),s("p",[this._v("if和else后面不要加分号")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"for-语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#for-语句","aria-hidden":"true"}},[this._v("#")]),this._v(" for 语句")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("for循环中的“表达式1. 2. 3”均可可以缺省，但分号(;)不能缺省。")]),this._v(" "),s("li",[this._v("省略“表达式1（循环变量赋初值）”，表示不对循环变量赋初始值。如：")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"start %d\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"3"}},[s("li",[this._v("省略“表达式2(循环条件)”，不做其它处理，循环一直执行（死循环）。如：")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"4"}},[s("li",[this._v("省略“表达式3(循环变量增量)”，不做其他处理，循环一直执行（死循环）。如：")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"5"}},[s("li",[this._v("表达式1可以是设置循环变量的初值的赋值表达式，也可以是其他表达式。如：")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" sun"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("moon"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    sun"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("moon "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("sun"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("moon"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("sun"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sun:%d,moon%d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("sun"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("moon"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"6"}},[s("li",[this._v("表达式1和表达式3可以是一个简单表达式也可以是多个表达式以逗号分割。如：\n"),s("ul",[s("li",[this._v("同上")])])]),this._v(" "),s("li",[this._v("表达式2一般是关系表达式或逻辑表达式，但也可是数值表达式或字符表达式，只要其值非零，就执行循环体。")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" sun"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("moon"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    sun"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("moon "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("sun"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("moon"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("moon"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("sun"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sun:%d,moon%d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("sun"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("moon"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"8"}},[s("li",[this._v("各表达式中的变量一定要在for循环之前定义。如：")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"danger custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),s("p",[this._v("函数块，if()后面没有分号，直接写{}，else后面也没有分号，直接写{} 可以嵌套")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"while语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#while语句","aria-hidden":"true"}},[this._v("#")]),this._v(" while语句")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" o"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("strong"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"danger custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),s("p",[this._v("do while后面有分号")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"switch语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#switch语句","aria-hidden":"true"}},[this._v("#")]),this._v(" switch语句")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" score"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("87")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("score"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("87")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("87")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("85")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("87")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不要使用continue;")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ol",[a("li",[t._v("在case后的各常量表达式的值不能相同，否则会出现错误。")]),t._v(" "),a("li",[t._v("在case子句后如果没有break;会一直往后执行一直到遇到break;才会跳出switch语句。")]),t._v(" "),a("li",[t._v("switch后面的表达式语句只能是整型或者字符类型。")]),t._v(" "),a("li",[t._v("在case后，允许有多个语句，可以不用{}括起来。")]),t._v(" "),a("li",[t._v("各case和default子句的先后顺序可以变动，而不会影响程序执行结果。")]),t._v(" "),a("li",[t._v("default子句可以省略不用")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"含树🌳"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#含树🌳","aria-hidden":"true"}},[this._v("#")]),this._v(" 含树🌳")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("就是可复用的代码块"),s("br")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("返回值   函数名   (参数){   "),s("br"),this._v("\n     return 返回值     "),s("br"),this._v("\n}"),s("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("返回值没有就写void,自定义函数尽量放在main函数之前，如果要放在main函数后面的话，需要在main函数之前先声明自定义函数"),s("br"),this._v("声明格式为："),s("code",[this._v("返回值类型 函数名(参数);")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"da sha bi"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("void 可以有"),s("code",[this._v("return;")]),this._v("其他的函数可以"),s("code",[this._v("return x;")]),this._v("或"),s("code",[this._v("return (x);")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参数","aria-hidden":"true"}},[this._v("#")]),this._v(" 参数")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("形参只有在被调用时才分配内存单元，在调用结束时会释放所分配的内存单元。")]),t._v(" "),a("li",[t._v("实参可以是"),a("code",[t._v("常量")]),t._v(" "),a("code",[t._v("变量")]),t._v(" "),a("code",[t._v("表达式")]),t._v(" "),a("code",[t._v("函数")]),t._v("等，无论实参是何种类型的量，在进行函数调用时，它们都必须具有确定的值，以便把这些值传送给形参,应预先用赋值等办法使实参获得确定值。")]),t._v(" "),a("li",[t._v("在参数传递时，实参和形参在数量上，类型上，顺序上应严格一致，否则会类型不匹配")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("不定长参数需要先引入"),s("code",[this._v("#include <stdarg.h>")]),this._v(",函数的第一个参数需要int，指明传进来多少，然后是三个..."),s("br")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdarg.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("55")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" res"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    va_list valist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定义一个va_list数组")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("va_start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("valist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将数组初始化")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//循环访问")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" temp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("va_arg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("valist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注意这个函数每次调用拿到一个,不使用下标")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%f\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("temp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        res"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v("temp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("va_end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("valist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"danger custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),s("p",[this._v("实际的可变参数的个数必须比前面强制参数中指定的个数要多，或者不小于。也即后续参数多一点不要紧，但不能少！如果少了则会访问到函数参数以外的堆栈区域，这可能会把程序搞崩掉。前面强制参数中指定的类型和后面实际参数的类型不匹配也有可能造成程序崩溃\n"),s("br"),this._v("va_arg(valist,int);//注意这个函数每次调用拿到一个，无论什么时候，不使用下标(栈)")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"递归"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#递归","aria-hidden":"true"}},[this._v("#")]),this._v(" 递归")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("TIP")]),this._v(" "),s("p",[this._v("递归是非常消耗空间的。每次进行递归都会为函数开辟新的栈空间,容易栈溢出，大部分的递归都可以改写成非递归")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"闭包和lambda"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包和lambda","aria-hidden":"true"}},[this._v("#")]),this._v(" 闭包和Lambda")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("不支持闭包但是可以通过"),s("code",[this._v("Lambda")]),this._v("和"),s("code",[this._v("struct")]),this._v("嵌套定义来实现。用到再说")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"变量存储机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量存储机制","aria-hidden":"true"}},[this._v("#")]),this._v(" 变量存储机制")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"局部-全局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#局部-全局","aria-hidden":"true"}},[this._v("#")]),this._v(" 局部&全局")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"danger custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("当局部变量被定义时，系统不会对其初始化，必须自行对其初始化。定义全局变量时，系统会自动对其初始化"),a("br"),t._v(" "),a("code",[t._v("int->0")]),t._v(" "),a("code",[t._v("char->'0'")]),t._v(" "),a("code",[t._v("float->0")]),t._v(" "),a("code",[t._v("double->0")]),t._v(" "),a("code",[t._v("pointer->NULL")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"静态static"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态static","aria-hidden":"true"}},[this._v("#")]),this._v(" 静态static")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("a",{attrs:{href:"http://www.runoob.com/w3cnote/cpp-static-usage.html"}},[this._v("菜鸟详细解析")]),this._v(" "),s("br"),this._v("需要一个数据对象为整个类而非某个对象服务,同时又力求不破坏类的封装性,即要求此成员隐藏在类的内部，对外不可见时，可将其定义为静态数据。直接在data和bss段进行定义，生命周期为整个程序"),s("strong",[this._v("不能在类的声明中定义")]),this._v("（只能声明数据成员）也"),s("strong",[this._v("不能在头文件中类声明的外部定义")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("静态变量的特性:")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("在修饰变量的时候，static 修饰的静态局部变量"),a("code",[t._v("只执行初始化一次")]),t._v("，而且延长了局部变量的生命周期，直到程序运行"),a("code",[t._v("结束")]),t._v("以后才释放。")]),t._v(" "),a("li",[t._v("static 修饰全局变量的时候，这个全局变量只能在"),a("code",[t._v("本文件中访问")]),t._v("，不能在其它文件中访问，即便是 "),a("code",[t._v("extern")]),t._v(" 外部声明也"),a("code",[t._v("不可以")]),t._v("。")]),t._v(" "),a("li",[t._v("static 修饰一个函数，则这个"),a("code",[t._v("函数")]),t._v("的只能在"),a("code",[t._v("本文件中调用")]),t._v("，不能被其他文件调用。static 修饰的变量存放在全局数据区的"),a("code",[t._v("静态变量区")]),t._v("，包括全局静态变量和局部静态变量，都在全局数据区分配内存。初始化的时候自动"),a("code",[t._v("初始化为 0")]),t._v("。")]),t._v(" "),a("li",[t._v("不想被释放的时候，可以使用static修饰。比如修饰"),a("code",[t._v("函数中存放在栈空间的数组")]),t._v("。如果不想让这个数组在函数调用结束释放可以使用 static 修饰。")]),t._v(" "),a("li",[t._v("考虑到数据安全性（当程序想要使用全局变量的时候应该"),a("code",[t._v("优先")]),t._v("考虑使用 static）。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"2"}},[s("li",[this._v("静态与全局变量：")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("静态变量都在"),a("code",[t._v("全局数据区分配内存")]),t._v("，包括后面将要提到的静态局部变量")]),t._v(" "),a("li",[t._v("未经初始化的静态全局变量会被程序"),a("code",[t._v("自动初始化为0")]),t._v("（在函数体内声明的自动变量的值是随机的，除非它被显式初始化，而在函数体外被声明的自动变量也会被初始化为 0）；")]),t._v(" "),a("li",[t._v("静态全局变量在声明它的"),a("code",[t._v("整个文件都是可见")]),t._v("的，而在文件"),a("code",[t._v("之外是不可见")]),t._v("的")]),t._v(" "),a("li",[t._v("静态全局变量不能被其它文件所用；其它文件中可以定义"),a("code",[t._v("相同名字")]),t._v("的变量，不会发生冲突。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"3"}},[s("li",[this._v("全局变量和全局静态变量的区别:")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("全局变量是不显式用 "),a("code",[t._v("static")]),t._v(" 修饰的全局变量，全局变量默认是有"),a("code",[t._v("外部链接性的")]),t._v("，作用域是整个工程，在一个文件内定义的全局变量，在另一个文件中，通过 "),a("code",[t._v("extern")]),t._v(" 全局变量名的声明，就可以使用全局变量。")]),t._v(" "),a("li",[t._v("全局静态变量是显式用 "),a("code",[t._v("static")]),t._v(" 修饰的全局变量，作用域是声明此变量所在的文件，其他的文件即使用 "),a("code",[t._v("extern")]),t._v(" 声明也"),a("code",[t._v("不能使用")]),t._v("。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"4"}},[s("li",[this._v("静态局部(internal)变量有以下特点：")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("该变量在"),a("code",[t._v("全局数据区")]),t._v("分配内存；")]),t._v(" "),a("li",[t._v("静态局部变量在程序执行到"),a("code",[t._v("该对象的声明处")]),t._v("时被首次"),a("code",[t._v("初始化")]),t._v("，即"),a("code",[t._v("以后的函数调用不再进行初始化")]),t._v("；")]),t._v(" "),a("li",[t._v("静态局部变量一般在声明处初始化，如果"),a("code",[t._v("没有显式初始化")]),t._v("，会被程序"),a("code",[t._v("自动初始化为 0")]),t._v("；")]),t._v(" "),a("li",[t._v("它始终"),a("code",[t._v("驻留在全局数据区")]),t._v("，直到程序运行结束。但其"),a("strong",[a("code",[t._v("作用域为局部作用域")])]),t._v("，当定义它的函数或语句块结束时，其作用域随之结束。\n------搬运自菜鸟,转载注明出处")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"外部extern"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#外部extern","aria-hidden":"true"}},[this._v("#")]),this._v(" 外部extern")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("TIP")]),this._v(" "),s("p",[s("code",[this._v("<>")]),this._v("从系统头文件中寻找，没有则报错，"),s("code",[this._v('""')]),this._v("先从非系统头文件找，没有再找系统头文件，不会报错")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在同一文件时相当于函数的预声明，告诉编译器这个变量在后面声名"),s("br")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("# "),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("56")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("多文件可以让一个文件引用另一个文件中的变量。在另一个文件中声明一下时extern，同目录(工程)下的文件就可以引用了。\n"),s("br"),this._v("如果用include的话就会让本文件所有的函数变量都可见会不安全。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ol",[a("li",[t._v("在本文件中声名一个变量"),a("code",[t._v("int a=5;")])]),t._v(" "),a("li",[t._v("在公共头文件中声明"),a("code",[t._v("extern int a;")])]),t._v(" "),a("li",[t._v("在其他文件中将声名"),a("code",[t._v("extern int a;")]),t._v("就可以访问到了")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),s("p",[this._v("只有当一个变量是一个"),s("code",[this._v("全局变量")]),this._v("时，extern变量才会起作用,局部变量不起作用"),s("br"),this._v("\n不能在其他文件中声明的时候同时赋值extern int a=5;是错误的，必须在原来的文件中重新赋值等等")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"auto"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#auto","aria-hidden":"true"}},[this._v("#")]),this._v(" auto")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"程序堆栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#程序堆栈","aria-hidden":"true"}},[this._v("#")]),this._v(" 程序堆栈")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ol",[a("li",[a("strong",[t._v("栈区(stack)")]),t._v(" ---由编译器自动分配释放，存放"),a("code",[t._v("函数的参数值")]),t._v("，"),a("code",[t._v("局部变量的值等")]),t._v("。其操作方式类似于数据结构中的"),a("code",[t._v("栈")]),t._v("。")]),t._v(" "),a("li",[a("strong",[t._v("堆区(heap)")]),t._v(" ---一般由程序员分配释放，若程序员不释放，程序结束时可能由OS回收。注意它与数据结构中的堆是两回事，分配方式类似于"),a("code",[t._v("链表")]),t._v("。可能用到的关键字如下：new、malloc、delete、free等等")]),t._v(" "),a("li",[a("strong",[t._v("全局区(静态区)")]),t._v(" ---"),a("code",[t._v("全局变量")]),t._v("和"),a("code",[t._v("静态变量")]),t._v("的存储时放在一块的，"),a("strong",[t._v("初始化")]),t._v("的全局变量和静态变量在一块区域，"),a("strong",[t._v("未初始化的")]),t._v("全局变量和未初始化的静态变量在相邻的另一块区域。程序结束后有系统释放。")]),t._v(" "),a("li",[a("strong",[t._v("文字常量区")]),t._v(" --- "),a("code",[t._v("常量")]),t._v(" "),a("code",[t._v("字符串")]),t._v("就是放在这里的。程序结束后由系统释放。")]),t._v(" "),a("li",[a("strong",[t._v("程序代码区")]),t._v(" --- 存放"),a("code",[t._v("函数体")]),t._v("的二进制。\n一般情况下程序存放在Rom或Flash中，运行时需要拷到内存中执行，内存会分别存储不同的信息,"),a("strong",[t._v("内存中的栈区处于相对较高的地址以地址的增长方向为上的话，栈地址是向下增长的")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//main.cpp")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 全局初始化区\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("p1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 全局未初始化区\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 栈\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 栈\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("p2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 栈\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("p3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123456"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123456")]),t._v("\\"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("在常量区，p3在栈上。\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("； 全局（静态）初始化区\np1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("malloc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  堆\np2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("malloc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  堆\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("申请释放\n"),a("ul",[a("li",[t._v("堆：需要程序员自己申请，并指明大小")]),t._v(" "),a("li",[t._v("栈：由系统自动分配，例如，声明在函数中一个局部变量int b；系统自动在栈中为b开辟空间")])])]),t._v(" "),a("li",[t._v("系统响应\n"),a("ul",[a("li",[t._v("栈：只要栈的剩余空间大于所申请空间，系统将为程序提供内存，否则将报异常提示栈溢出。")]),t._v(" "),a("li",[t._v("堆：首先应该知道操作系统有一个记录空闲内存地址的链表，当系统收到程序的申请时，会遍历该链表，寻找第一个空间大于所申请空间的堆结点，然后将该结点从空闲结点链表中删除，并将该结点的空间分配给程序，另外，对于大多数系统，会在这块内存空间中的首地址处记录本次分配的大小，这样，代码中的 delete语句才能正确的释放本内存空间。另外，由于找到的堆结点的大小不一定正好等于申请的大小，系统会自动的将多余的那部分重新放入空闲链表中。\n也就是说堆会在申请后还要做一些后续的工作这就会引出申请效率的问题。")])])]),t._v(" "),a("li",[t._v("效率\n"),a("ul",[a("li",[t._v("栈:由系统自动分配，速度较快。但程序员是无法控制的。")]),t._v(" "),a("li",[t._v("堆:是由new分配的内存，一般速度比较慢，而且容易产生内存碎片,不过用起来最方便。")])])]),t._v(" "),a("li",[t._v("内容\n"),a("ul",[a("li",[t._v("栈:在函数调用时，第一个进栈的是主函数中函数调用后的下一条指令（函数调用语句的下一条可执行语句）的地址，然后是函数的各个参数，在大多数的C编译器中，参数是由右往左入栈的，然后是函数中的局部变量。注意静态变量是不入栈的。\n当本次函数调用结束后，局部变量先出栈，然后是参数，最后栈顶指针指向最开始存的地址，也就是主函数中的下一条指令，程序由该点继续运行。")]),t._v(" "),a("li",[t._v("堆:一般是在堆的头部用一个字节存放堆的大小。堆中的具体内容有程序员安排。")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"数组list"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组list","aria-hidden":"true"}},[this._v("#")]),this._v(" 数组list")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("数组是自带的,其他的在STL中可以找到，STL里卖弄还有链表树等等啥都有。"),a("br"),t._v("\n数组是一块"),a("code",[t._v("连续的")]),t._v("，"),a("code",[t._v("大小固定")]),t._v("并且里面的数据"),a("code",[t._v("类型一致")]),t._v("的"),a("code",[t._v("内存")]),t._v("空间;"),a("br"),t._v(" "),a("strong",[t._v("\n数据类型 数组名称[长度];"),a("br"),t._v("\nchar b[5];"),a("br")]),t._v("\n数组初始化有三种形式："),a("br")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[s("p",[this._v("数据类型 数组名称[长度n] = {元素1,元素2…元素n};")])]),this._v(" "),s("li",[s("p",[this._v("数据类型 数组名称[] = {元素1,元素2…元素n};自己会判断有多少个")])]),this._v(" "),s("li",[s("p",[this._v("数据类型 数组名称[长度n]; 数组名称[0] = 元素1; 数组名称[1] = 元素2; 数组名称[n-1] = 元素n;")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("br"),this._v("拿取:数组名称[元素所对应下标];如：初始化一个数组 int arr[3] = {1,2,3}; 那么arr[0]就是元素1。"),s("br")])},function(){var t=this.$createElement,s=this._self._c||t;return s("strong",[this._v("\n数据类型 数组名称[行][列];"),s("br"),this._v("\nchar b[2][4];"),s("br")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("数组的下标均以"),a("code",[t._v("0")]),t._v("开始；初始化的时候，数组内元素的个数"),a("code",[t._v("不能大于")]),t._v("声明的数组长度；如果采用"),a("code",[t._v("第一种")]),t._v("初始化方式，元素个数小于数组的长度时，多余的数组元素初始化为"),a("code",[t._v("0")]),t._v("；在声明数组后没有进行初始化的时候，静态（static）和外部（extern）类型的数组元素初始化元素为0，"),a("code",[t._v("自动")]),t._v("（auto）类型的数组的元素初始化值"),a("code",[t._v("不确定")]),t._v("。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("单独把数组拿出来的时候获得是的数组的"),s("code",[this._v("首地址")]),this._v("，也就是数组的名字就是指向数组的指针\n作为参数，返回值")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("# "),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("temp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("temp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("作为返回值，函数返回值为一个指定类型的指针，外部需要一个同类型接收的指针，内部声明数组为"),s("code",[this._v("static")]),this._v("，初始化完数组，直接return这个数组的指针(名字)\n")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("TIP")]),this._v(" "),s("p",[this._v("另外，C 不支持在函数外返回局部变量的地址会报空指针，除非定义局部变量为 static 变量")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"多维数组的指针"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多维数组的指针","aria-hidden":"true"}},[this._v("#")]),this._v(" 多维数组的指针")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{attrs:{align:"center"}},[s("img",{attrs:{src:a(199)}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"指针"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指针","aria-hidden":"true"}},[this._v("#")]),this._v(" 指针")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[a("strong",[t._v("指针是C语言的灵魂！")]),a("br"),t._v(" "),a("strong",[a("code",[t._v("&")])]),t._v("符号是取"),a("strong",[a("code",[t._v("地址")])]),t._v("，取得地址之后得到的是一个"),a("strong",[a("code",[t._v("指针")])]),t._v("类型"),a("br"),t._v(" "),a("strong",[a("code",[t._v("*")])]),t._v("符号是"),a("strong",[a("code",[t._v("指针类型")])]),t._v("，用来接收一个"),a("strong",[a("code",[t._v("地址")])]),t._v("，占位符为"),a("strong",[a("code",[t._v("%p")])]),a("br"),t._v("\n变量在内存中是有一个"),a("strong",[a("code",[t._v("地址+值")])]),t._v("存在的。"),a("br"),t._v("\n所有指针的值的实际数据类型，不管是整型、浮点型、字符型，还是其他的数据类型，都是一样的，都是一个代表内存地址的长的"),a("code",[t._v("十六进制数")]),t._v("。不同数据类型的指针之间唯一的不同是，指针所指向的变量或常量的数据类型不同。\n一个地址可以被多个指针指向，但是一个指针之可以指一个地址")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("ip"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("dp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("fp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("ch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"danger custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),s("p",[this._v("如果定义的时候没想好指针怎么指，那就先赋一个空指针"),s("strong",[s("code",[this._v("int *p=NULL;")])]),s("br"),this._v("\n在大多数的操作系统上，程序不允许访问地址为 0 的内存，因为该内存是操作系统保留的。然而，内存地址 0 有特别重要的意义，它表明该指针不指向一个可访问的内存位置")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[this._v("咕咕咕\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[this._v("咕咕咕\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("指针定义")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("int p;")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("这是一个普通的整型变量")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("int *p;")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("首先从P 处开始,先与*结合,所以说明P 是一个指针,然后再与int 结合,说明指针所指向的内容的类型为int 型.所以P是一个返回整型数据的指针")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("int p[3];")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("首先从P 处开始,先与[]结合,说明P 是一个数组,然后与int 结合,说明数组里的元素是整型的,所以P 是一个由整型数据组成的数组")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("int *p[3];")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("首先从P 处开始,先与[]结合,因为其优先级比"),a("em",[t._v("高,所以P 是一个数组,然后再与")]),t._v("结合,说明数组里的元素是指针类型,然后再与int 结合,说明指针所指向的内容的类型是整型的,所以P 是一个由返回整型数据的指针所组成的数组")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("int (*p)[3];")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v('首先从P 处开始,先与*结合,说明P 是一个指针然后再与[]结合(与"()"这步可以忽略,只是为了改变优先级),说明指针所指向的内容是一个数组,然后再与int 结合,说明数组里的元素是整型的.所以P 是一个指向由整型数据组成的数组的指针')])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("int **p;")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("首先从P 开始,先与"),a("em",[t._v("结合,说是P 是一个指针,然后再与")]),t._v("结合,说明指针所指向的元素是指针,然后再与int 结合,说明该指针所指向的元素是整型数据.由于二级指针以及更高级的指针极少用在复杂的类型中,所以后面更复杂的类型我们就不考虑多级指针了,最多只考虑一级指针.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("int p(int);")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("从P 处起,先与()结合,说明P 是一个函数,然后进入()里分析,说明该函数有一个整型变量的参数,然后再与外面的int 结合,说明函数的返回值是一个整型数据")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("Int (*p)(int);")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("从P 处开始,先与指针结合,说明P 是一个指针,然后与()结合,说明指针指向的是一个函数,然后再与()里的int 结合,说明函数有一个int 型的参数,再与最外层的int 结合,说明函数的返回类型是整型,所以P 是一个指向有一个整型参数且返回类型为整型的函数的指针")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("int *(*p(int))[3];")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("可以先跳过,不看这个类型,过于复杂从P 开始,先与()结合,说明P 是一个函数,然后进入()里面,与int 结合,说明函数有一个整型变量参数,然后再与外面的"),a("em",[t._v("结合,说明函数返回的是一个指针,,然后到最外面一层,先与[]结合,说明返回的指针指向的是一个数组,然后再与")]),t._v("结合,说明数组里的元素是指针,然后再与int 结合,说明指针指向的内容是整型数据.所以P 是一个参数为一个整数据且返回一个指向由整型指针变量组成的数组的指针变量的函数.")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("-----转自"),s("a",{attrs:{href:"https://blog.csdn.net/constantin_/article/details/79575638"}},[this._v("指针超详细解释")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"danger custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),s("p",[this._v("void * 类型表示未确定类型的指针。C/C++ 规定 void * 类型可以通过类型转换强制转换为任何其它类型的指针。\n"),s("a",{attrs:{href:"http://www.runoob.com/w3cnote/c-void-intro.html"}},[this._v("详解")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"内存管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存管理","aria-hidden":"true"}},[this._v("#")]),this._v(" 内存管理")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("c语言的难点，好在数据结构考试中不那么看重，简单整理一下\n需要引入"),s("code",[this._v("#include <stdlib.h>")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"malloc-free"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#malloc-free","aria-hidden":"true"}},[this._v("#")]),this._v(" malloc;free")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("函数")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("作用")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("void *calloc(int num, int size);")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("在内存中动态地分配 num 个长度为 size 的连续空间，并将每一个字节都初始化为 0。所以它的结果是分配了 num*size 个字节长度的内存空间，并且每个字节的值都是0。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("void free(void *address);")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("该函数释放 address 所指向的内存块,释放的是动态分配的内存空间。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("void *malloc(int num);")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("在"),a("code",[t._v("堆区")]),t._v("分配一块指定大小的内存空间，用来存放数据。这块内存空间在函数执行完成后不会被初始化，它们的值是未知的。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("void *realloc(void *address, int newsize);")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("该函数重新分配内存，把内存扩展到 newsize。")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"danger custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),s("p",[this._v("看看就行了，C++中使用new代替了malloc")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"memset-memcopy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#memset-memcopy","aria-hidden":"true"}},[this._v("#")]),this._v(" memset;memcopy")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("C语言需要包含头文件string.h；C++需要包含cstring  或  string.h"),s("br")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("void *memset(void *s,int c,size_t n)"),s("br"),this._v("\n作用：将已开辟内存空间 s 的首 n 个字节的值设为值 c（给空间初始化）"),s("br"),this._v("\n最常用的就是把一个数组(未初始化的字符串)初始化")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"danger custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),s("p",[this._v('char * buffer = "Hello world\\n";已初始化的字符串是只读的存在只读存储区，其内容不能被随意更改。')])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[this._v("留坑\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("void *memcpy(void *dest, const void *src, size_t n);"),s("br"),this._v("\n用来将src地址处的内容拷贝n个字节的数据至目标地址dest指向的内存中去。函数返回指向dest的指针。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[this._v("留坑\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"danger custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),s("p",[this._v("memcpy用来做内存拷贝，你可以拿它拷贝任何数据类型的对象，可以指定拷贝的数据长度；例：char a[100],b[50]; memcpy(b, a, sizeof(b));注意如用sizeof(a)，会造成b的内存溢出。"),s("br"),this._v("\n另外：strcpy只能拷贝字符串，它遇到'\\0'就结束拷贝；例：char a[100],b[50];strcpy(a,b);如用strcpy(b,a)，要注意a中的字符串长度（第一个‘\\0’之前）是否超过50位，如超过，则会造成b的内存溢出。会造成缓冲区溢出，轻者程序崩溃，重者系统会出现问题！！")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("----转自"),s("a",{attrs:{href:"https://blog.csdn.net/scottly1/article/details/16829741"}},[this._v("详解")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"sizeof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sizeof","aria-hidden":"true"}},[this._v("#")]),this._v(" sizeof")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"danger custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),s("p",[this._v("sizeof操作符不能用于函数类型，不完全类型或位字段。不完全类型指具有未知存储大小的数据类型，如未知存储大小的数组类型、未知内容的结构或联合类型、void类型等")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("结果")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("sizeof(int)=4")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("sizeof(unsigned int)=4")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("sizeof(short int)=2")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("sizeof(unsigned short)=2")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("sizeof(long int)=4")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("sizeof(unsigned long)=4")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("sizeof(float)=4")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("sizeof(double)=8")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("sizeof(long double)=8")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("sizeof(char/unsigned char/signed char)=1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("sizeof(*ptr)=4")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("int a[10]，sizeof(a)=40数组结果是数组的总字节数。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("联合类型操作数的sizeof是其最大字节成员的字节数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("结构类型操作数的sizeof是这种类型对象的总字节数，包括任何铺垫在内；           ")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"结构体"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结构体","aria-hidden":"true"}},[this._v("#")]),this._v(" 结构体")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"struct"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#struct","aria-hidden":"true"}},[this._v("#")]),this._v(" struct")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[a("code",[t._v("struct")]),t._v(" "),a("strong",[t._v("name")]),t._v(" { "),a("br"),t._v(" "),a("strong",[t._v("member-list")]),t._v(";"),a("br"),t._v("\n   member-list; "),a("br"),t._v("\n   member-list;  "),a("br"),t._v("\n            ..."),a("br"),t._v("\n} "),a("strong",[t._v("variable-list")]),t._v(" ;"),a("br"),t._v(" "),a("code",[t._v("struct")]),t._v(" name n; "),a("br"),t._v("\n以下发言是借用了面向对象的说法"),a("br"),t._v("\n你可以省略掉name，variable-list相当于直接定义了一堆对象而没有类名，也就不能用类名来在定义其他的变量了"),a("br"),t._v("\n你可以省略掉variable-list，但不要落下类名，可以后面手动定义name n;"),a("br"),t._v("\n你也可以把name 通过typedef放在后面typedef struct{} name;让然需要自己生成对象。"),a("br"),t._v("\n访问对象的成员的时候直接用"),a("code",[t._v(".")]),t._v("访问"),a("br"),t._v("\n关于指针：")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("struct name "),a("code",[t._v("*p")]),t._v(";这是定义了一个指针赋值的时候p=&n;")]),t._v(" "),a("li",[t._v("取值用"),a("code",[t._v("p->m")]),t._v("相当于"),a("code",[t._v("n.m")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"typedef"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#typedef","aria-hidden":"true"}},[this._v("#")]),this._v(" typedef")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("typedef")]),this._v(" 可以给一个东西娶个别名，比如typedef long long ll\n这时候使用"),s("code",[this._v("ll a;=long long a;")]),this._v("\n一般会用来给结构体娶个新名字")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Books")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v("  title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v("  author"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v("  subject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("   book_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" Book"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("TIP")]),this._v(" "),s("ul",[s("li",[this._v("typedef 仅限于为类型定义符号名称#define（宏）不仅可以为类型定义别名，也能为数值定义别名")]),this._v(" "),s("li",[this._v("typedef 是由编译器执行解释的，#define 语句是由预编译器进行处理的")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"参考资料列表包含c-的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料列表包含c-的","aria-hidden":"true"}},[this._v("#")]),this._v(" 参考资料列表包含c++的")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[a("a",{attrs:{href:"https://blog.csdn.net/love_gaohz/article/details/7567856"}},[t._v("const与define√")])]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.runoob.com/cprogramming/c-tutorial.html"}},[t._v("菜鸟c语言")])]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.imooc.com/view/249"}},[t._v("慕课c语言")])]),t._v(" "),a("li",[a("a",{attrs:{href:"https://my.oschina.net/jthmath/blog/488462"}},[t._v("开源中国元组")])]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/a1232345/article/details/44957191"}},[t._v("C语言堆栈入门")])]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/constantin_/article/details/79575638"}},[t._v("超级详细的指针")])]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.bilibili.com/video/av40959422"}},[t._v("bilibili hw-dong")])]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/nzbbody/p/3523064.html"}},[t._v("继承过程中构造析构详解")])]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.runoob.com/cplusplus/cpp-classes-objects.html"}},[t._v("菜鸟C++")])]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/zuzhiang/article/details/78155112"}},[t._v("字符和字符串")])]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/ezhou_liukai/article/details/13779091"}},[t._v("字符串操作")])]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/ezhou_liukai/article/details/13779091 "}},[t._v("字符串")])]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/hyg0811/article/details/10956699"}},[t._v("STL参考")])]),t._v(" "),a("li",[a("a",{attrs:{href:""}},[t._v("1")])]),t._v(" "),a("li",[a("a",{attrs:{href:""}},[t._v("1")])]),t._v(" "),a("li",[a("a",{attrs:{href:""}},[t._v("1")])])])}],n=a(0),r=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),a("h4",[t._v("字符")]),t._v(" "),t._m(15),t._v(" "),t._m(16),a("p",[t._v("声明一个字符，但是我们用整型输出，就会输出它对应的ASCII码数字了,char只能存储一个字符，它的取值范围是：ASCII码字符 或者 -128~127的整数")]),t._v(" "),t._m(17),t._v(" "),a("h4",[t._v("字符串")]),t._v(" "),t._m(18),t._v(" "),t._m(19),a("p",[t._v("c基本的几个函数(等后面c++里还会变)")]),t._v(" "),t._m(20),t._v(" "),a("p",[t._v("----from 菜鸟教程")]),t._v(" "),t._m(21),t._v(" "),a("p",[t._v("enum 名字 {e1,e2,e3...} e;")]),t._v(" "),a("p",[t._v("这样就定义了一个枚举e（也可以先不定义e，后面enum 名字 e），第一个元素e1默认为0，后续元素逐个+1，可以自己定义，如e3=5那么元素变为0，1，5，6...")]),t._v(" "),t._m(22),t._v(" "),t._m(23),t._m(24),t._v(" "),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),t._m(28),t._v(" "),t._m(29),t._v(" "),t._m(30),t._v(" "),t._m(31),t._v(" "),t._m(32),t._v(" "),t._m(33),t._m(34),t._v(" "),t._m(35),t._v(" "),t._m(36),t._v(" "),t._m(37),t._v(" "),t._m(38),t._v(" "),t._m(39),t._v(" "),t._m(40),t._v(" "),t._m(41),t._v(" "),a("p",[t._v("格式字符有d,o,x,u,c,s,f,e,g等。")]),t._v(" "),t._m(42),t._v(" "),t._m(43),t._v(" "),t._m(44),t._v(" "),a("p",[t._v("6个特殊符号")]),t._v(" "),t._m(45),t._v(" "),t._m(46),t._v(" "),t._m(47),t._v(" "),t._m(48),t._v(" "),t._m(49),t._v(" "),t._m(50),t._v(" "),t._m(51),t._v(" "),a("p",[t._v("分支循环时")]),t._v(" "),t._m(52),a("p",[t._v("嵌套if的时候是有域的定义的，注意变量的作用域")]),t._v(" "),t._m(53),t._m(54),t._v(" "),t._m(55),t._v(" "),a("p",[t._v("使用for语句应该注意：")]),t._v(" "),t._m(56),t._v(" "),t._m(57),t._m(58),t._v(" "),t._m(59),t._m(60),t._v(" "),t._m(61),t._m(62),t._v(" "),t._m(63),t._m(64),t._v(" "),t._m(65),t._m(66),t._v(" "),t._m(67),t._v(" "),t._m(68),t._v(" "),a("p",[t._v("若o不为空则一直执行")]),t._v(" "),t._m(69),a("p",[t._v("do while会先执行一次语句然后在执行while判断。")]),t._v(" "),t._m(70),t._m(71),t._v(" "),t._m(72),t._v(" "),t._m(73),t._m(74),t._v(" "),t._m(75),t._v(" "),t._m(76),t._v(" "),t._m(77),t._v(" "),t._m(78),t._v(" "),t._m(79),t._m(80),t._v(" "),t._m(81),t._v(" "),a("h4",[t._v("形参和实参")]),t._v("\n分型参和实参,形参是在定义函数名和函数体的时候使用的参数,目的是用来接收调用该函数时传入的参数，实参就是实际使用到的参数。\n"),t._m(82),t._v(" "),a("h4",[t._v("不定长参数")]),t._v(" "),t._m(83),t._v(" "),a("p",[t._v("函数体内拿到一个数组，赋值给另一个已知类型的数组，然后清理内存就拿到了。")]),t._v(" "),t._m(84),t._m(85),t._v(" "),t._m(86),t._v(" "),a("p",[t._v("定义:在含树体中自己调用自己，执行递归函数将反复调用其自身，每调用一次就进入新的一层。递归需要有边界条件、递归前进段和递归返回段。\n经典的斐波那契(Fibonacci)")]),t._v(" "),t._m(87),a("p",[t._v("还有求阶乘")]),t._v(" "),t._m(88),t._m(89),t._v(" "),t._m(90),t._v(" "),t._m(91),t._v(" "),t._m(92),t._v(" "),t._m(93),t._v(" "),a("p",[t._v("global和local在一个代码块中新定义的变量在代码块使用结束后就会释放，不能在外面调用。全局变量可以直接调用，如果在代码块中定义了和外面相同名字的变量就优先使用local的变量。")]),t._v(" "),t._m(94),t._v(" "),t._m(95),t._v(" "),t._m(96),t._v(" "),t._m(97),t._v(" "),t._m(98),t._v(" "),t._m(99),t._v(" "),t._m(100),t._v(" "),t._m(101),t._v(" "),t._m(102),t._v(" "),t._m(103),t._v(" "),t._m(104),t._v(" "),t._m(105),t._v(" "),t._m(106),t._v(" "),a("h4",[t._v("在单文件中")]),t._v(" "),t._m(107),t._v(" "),t._m(108),a("h4",[t._v("在多文件中")]),a("br"),t._v(" "),t._m(109),t._v(" "),t._m(110),t._v(" "),t._m(111),t._v(" "),t._m(112),t._v(" "),a("p",[t._v("定义一个变量不指定他的静态还是外部等等就自动默认为auto一般你不指定的就是auto，与之相对的是register寄存器变量这两个不常用。会随机应变auto的出现意味着，当前变量的作用域为当前函数或代码段的局部变量，意味着当前变量会在内存栈上进行分配。")]),t._v(" "),t._m(113),t._v(" "),a("p",[t._v("一个由C/C++编译的程序占用的内存分为以下几个部分：")]),t._v(" "),t._m(114),t._v(" "),t._m(115),a("p",[t._v("区别和共同点")]),t._v(" "),t._m(116),t._v(" "),t._m(117),t._v(" "),t._m(118),t._v(" "),t._m(119),t._v(" "),t._m(120),t._v(" "),a("h4",[t._v("多维数组")]),t._v(" "),t._m(121),t._v(" "),a("p",[t._v("其实存储方式还是一维数组的存储方式，地址都是连续的")]),t._v(" "),a("p",[t._v("char b[2][4];={1,2,3,4,5,6,7,8};\n一般使用for来循环")]),t._v(" "),t._m(122),t._m(123),t._v(" "),t._m(124),t._v(" "),t._m(125),t._m(126),a("h4",[t._v("不定长数组")]),t._v("\n参见vector"),a("p"),t._v(" "),t._m(127),t._v(" "),t._m(128),t._v(" "),a("p",[t._v("多维数组会有维的索引数组，第一次取下标取到的是地址而不是值\n")]),t._m(129),a("p"),t._v(" "),t._m(130),t._v(" "),t._m(131),t._v(" "),t._m(132),t._m(133),t._v(" "),a("p",[t._v("指针可以进行四则运算，他会指向下一块或者上一块内存区域，比如数组可以用指针来遍历。")]),t._v(" "),t._m(134),a("p",[t._v("指针可以作为参数和函数返回值。作为参数的时候会直接对外部的变量内存的值进行修改，做返回值就是拿到了该变量的指针，局部变量的指针不能作为返回值，会被释放，要声明一下static")]),t._v(" "),t._m(135),a("p",[t._v("指针的优先级")]),t._v(" "),t._m(136),t._v(" "),t._m(137),t._v(" "),t._m(138),t._v(" "),t._m(139),t._v(" "),t._m(140),t._v(" "),t._m(141),t._v(" "),t._m(142),t._v(" "),t._m(143),t._v(" "),t._m(144),t._v(" "),t._m(145),t._v(" "),t._m(146),t._v(" "),t._m(147),t._v(" "),t._m(148),t._m(149),t._v(" "),t._m(150),t._m(151),t._v(" "),t._m(152),t._v(" "),t._m(153),t._v(" "),a("p",[t._v("高级用法先不谈，最基本的俩用法\n类型：sizeof使用形式：sizeof(type)（sizeof（int））\n变量：sizeof使用形式：sizeof(var_name)或sizeof var_name")]),t._v(" "),t._m(154),t._v(" "),a("p",[t._v("Sizeof操作符的结果类型是size_t")]),t._v(" "),a("p",[t._v("结果(x64下):")]),t._v(" "),t._m(155),t._v(" "),t._m(156),t._v(" "),a("p",[t._v("有点面向对象的意思了，不过还没有对象")]),t._v(" "),t._m(157),t._v(" "),t._m(158),t._v(" "),t._m(159),t._v(" "),t._m(160),t._m(161),t._v(" "),t._m(162),t._v(" "),t._m(163),t._m(164),t._v(" "),a("p",[t._v("终于整理完C了！！！")]),t._v(" "),t._m(165),t._v(" "),t._m(166),t._v(" "),a("Valine")],1)},e,!1,null,null,null);s.default=r.exports}}]);